(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    441029,       8707]
NotebookOptionsPosition[    437606,       8649]
NotebookOutlinePosition[    438151,       8669]
CellTagsIndexPosition[    438108,       8666]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Electroweak baryogenesis at high wall velocities (arXiv:2001.00568)\
\>", "Title",
 CellChangeTimes->{{3.8126144300377493`*^9, 3.812614445318102*^9}, 
   3.839739263840369*^9},ExpressionUUID->"d30c64bf-2227-433f-96cd-\
3b0705509954"],

Cell[CellGroupData[{

Cell["Master Code  Reformulated", "Chapter",
 CellChangeTimes->{{3.8146057887629547`*^9, 3.814605789002969*^9}, {
   3.8352453365735083`*^9, 3.835245345778113*^9}, {3.8352458516260147`*^9, 
   3.835245854665906*^9}, {3.835246704347508*^9, 3.8352467117955647`*^9}, {
   3.835323421926244*^9, 3.8353234267739573`*^9}, {3.837242182643836*^9, 
   3.83724218457971*^9}, 3.8395595836725616`*^9, {3.8395597077264137`*^9, 
   3.839559709358471*^9}, {3.839561213447247*^9, 3.839561213845365*^9}, {
   3.861955985624036*^9, 
   3.861955989615774*^9}},ExpressionUUID->"aac0c648-e434-4e0a-8316-\
4555bbcc361d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8629282159203043`*^9, 3.862928235032563*^9}, {
   3.862928400792141*^9, 3.862928411718524*^9}, {3.862928630730288*^9, 
   3.862928635576473*^9}, {3.86292872049671*^9, 3.862928747332182*^9}, {
   3.8629294585248823`*^9, 3.862929471951099*^9}, 3.862929688088962*^9, 
   3.86292974744186*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"3e924a01-8ce7-4ee0-861a-409b9a17d454"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ParametricPlot", ",", "ListLinePlot", ",", "LogLogPlot", ",", 
      "LogLinearPlot", ",", "ListPlot", ",", "ListLogPlot", ",", 
      "ListLogLinearPlot", ",", "ListLogLogPlot", ",", "ListContourPlot", ",",
       "LogPlot", ",", "Plot", ",", "RegionPlot", ",", "ContourPlot"}], "}"}],
     ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"BaseStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontColor", "->", "Black"}], ",", 
       RowBox[{"FontWeight", "->", "\"\<Normal\>\""}], ",", 
       RowBox[{"FontSize", "->", "16"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}], ",", 
    RowBox[{"Axes", "->", "False"}], ",", 
    RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
    RowBox[{"AspectRatio", "->", "1"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "GoldenRatio"}]}], ",", 
    RowBox[{"PlotRange", "->", "Full"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"colours", "=", 
   RowBox[{"ColorData", "[", 
    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WP", "=", "MachinePrecision"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**"}], "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "*********)"}]}]}], "Input",
 CellChangeTimes->{{3.861956064101427*^9, 3.861956110224049*^9}, {
   3.862928170237466*^9, 3.862928176437026*^9}, 3.862928629863388*^9, 
   3.862929475096118*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"4cfe54ff-4d8a-4ef2-a73e-a8e1496df911"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gtab", "=", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"\"\<standardmodel2018.txt\>\"", ",", "\"\<Table\>\"", ",", 
        RowBox[{"HeaderLines", "\[Rule]", "8"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ";;", "20"}], "]"}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"gtab", "=", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"\"\<./satoshi_dof.dat\>\"", ",", "\"\<Table\>\"", ",", 
        RowBox[{"HeaderLines", "\[Rule]", "8"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ";;", "20"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gstar", "[", "T_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Interpolation", "[", 
       RowBox[{"gtab", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}], "[", "T", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gsstar", "[", "T_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Interpolation", "[", 
       RowBox[{"gtab", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], "[", "T", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "******)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
    "******)"}]}]}]], "Input",
 CellChangeTimes->{{3.861956127230351*^9, 3.861956129509398*^9}, {
  3.861956191006325*^9, 3.8619561912138767`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"c4642fd2-bac6-4158-be72-601768a72806"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"params3", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<SCANS/BAU/Z2_breaking_sols_BAU.csv\>\"", ",", "\"\<Dataset\>\"", 
      ",", 
      RowBox[{"\"\<HeaderLines\>\"", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8619564933447647`*^9, 3.861956495424302*^9}, 
   3.862233349301278*^9, {3.862930079599743*^9, 3.862930097589271*^9}, {
   3.862930322718329*^9, 3.8629303337360687`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"c7e092b1-2f1c-423a-badf-41817ca270e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"params3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<SCANS/Z2_breaking_sols.csv\>\"", ",", "\"\<Dataset\>\"", ",", 
     RowBox[{"\"\<HeaderLines\>\"", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.862930326211705*^9, {3.8631626094544373`*^9, 3.86316261040658*^9}, {
   3.863162946701624*^9, 3.863162947041745*^9}, {3.86316469616336*^9, 
   3.8631647010367203`*^9}, {3.863171142950406*^9, 3.863171143096694*^9}, {
   3.863173000272911*^9, 3.86317300043963*^9}, {3.8631732234976587`*^9, 
   3.863173226045534*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"2c7230e8-3935-4f49-99c9-61e3fd6920f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tnlist", "=", 
   RowBox[{"params3", "[", 
    RowBox[{"All", ",", "\"\<Tnuc_0\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TpoverTnlist", "=", 
   RowBox[{"params3", "[", 
    RowBox[{"All", ",", "\"\<Tp/TN\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vwlist", "=", 
   RowBox[{"params3", "[", 
    RowBox[{"All", ",", "\"\<vw\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vplist", "=", 
   RowBox[{"params3", "[", 
    RowBox[{"All", ",", "\"\<vp\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h0list", "=", 
   RowBox[{"params3", "[", 
    RowBox[{"All", ",", "\"\<h0\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lhlist", "=", 
   RowBox[{"params3", "[", 
    RowBox[{"All", ",", "\"\<Lh\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lslist", "=", 
   RowBox[{"params3", "[", 
    RowBox[{"All", ",", "\"\<Ls\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dslist", "=", 
   RowBox[{"params3", "[", 
    RowBox[{"All", ",", "\"\<ds\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shighlist", "=", 
   RowBox[{"params3", "[", 
    RowBox[{"All", ",", "\"\<shigh\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"slowlist", "=", 
   RowBox[{"params3", "[", 
    RowBox[{"All", ",", "\"\<slow\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphalist", "=", 
   RowBox[{"params3", "[", 
    RowBox[{"All", ",", "\"\<alpha_max\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"alphalist", "=", 
     RowBox[{"params3", "[", 
      RowBox[{"All", ",", "\"\<alpha\>\""}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"betalist", "=", 
     RowBox[{"params3", "[", 
      RowBox[{"All", ",", "\"\<d/dT(S_3/T)\>\""}], "]"}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.861956467078738*^9, 3.861956489022153*^9}, {
  3.861956855880333*^9, 3.861956884260626*^9}, {3.861956943452393*^9, 
  3.8619570153501*^9}, {3.861968192500217*^9, 3.8619682222857103`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"6fb3d7cf-266b-4655-93f3-e4632042f35b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MasterFunction", "[", 
    RowBox[{
    "Tn_", ",", "vw_", ",", "h0_", ",", "Lh_", ",", "sl_", ",", "sh_", ",", 
     "Ls_", ",", "ds_", ",", "\[CapitalLambda]CP_", ",", "Infty_", ",", 
     "points_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"MasterFunction", "[", 
     RowBox[{
     "Tn", ",", "vw", ",", "h0", ",", "Lh", ",", "sl", ",", "sh", ",", "Ls", 
      ",", "ds", ",", "\[CapitalLambda]CP", ",", "Infty", ",", "points"}], 
     "]"}], "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Eta]obs", "=", 
         RowBox[{"8", " ", 
          RowBox[{"10", "^", 
           RowBox[{"-", "11"}]}]}]}], ",", 
        RowBox[{"\[Beta]", "=", 
         RowBox[{"1", "/", "Tn"}]}], ",", 
        RowBox[{"\[CapitalGamma]sph", "=", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]], "Tn"}]}], ",", "h", ",", "s", ",", "mt", ",", 
        "Bond", ",", "Equation", ",", "sol", ",", "\[Mu]tlsol", ",", 
        "\[Mu]trsol", ",", "\[Mu]blsol", ",", "\[Mu]hsol", ",", "\[Mu]BL", 
        ",", "fsph", ",", "gdof", ",", "\[Eta]B", ",", "Plot1", ",", "Plot2", 
        ",", "\[IndentingNewLine]", 
        RowBox[{"\[CapitalGamma]SS", "=", 
         RowBox[{"4.9", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "4"}]], "Tn"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[CapitalGamma]y", "=", 
         RowBox[{"4.2", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "3", " "}]], "Tn"}]}], ",", 
        RowBox[{"Dq", "=", 
         RowBox[{"6", "/", "Tn"}]}], 
        RowBox[{"(*", 
         RowBox[{"quark", " ", "diffusion", " ", "constant"}], "*)"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Dh", "=", 
         RowBox[{"20", "/", "Tn"}]}], 
        RowBox[{"(*", 
         RowBox[{"higgs", " ", "diffusion", " ", "constant"}], "*)"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"inf", "=", 
         RowBox[{"Infty", " ", "Lh"}]}]}], " ", 
       RowBox[{"(*", 
        RowBox[{"defines", " ", "the", " ", "region", " ", "of", " ", 
         RowBox[{"interpolation", "/", "integration"}]}], "*)"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"pw", "=", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["w", "2"], "-", 
           SuperscriptBox["x", "2"]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Formula", " ", "defined", " ", "after", " ", "A3"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"pz", "=", 
         RowBox[{
          FractionBox["1", 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vw", "2"]}]]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"y", " ", "pw"}], "-", 
            RowBox[{"w", " ", "vw"}]}], ")"}]}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Formula", " ", "defined", " ", "after", " ", "A3"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"Eb", "=", 
         RowBox[{
          FractionBox["1", 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vw", "2"]}]]], 
          RowBox[{"(", 
           RowBox[{"w", "-", 
            RowBox[{"vw", " ", "y", " ", "pw"}]}], ")"}]}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Formula", " ", "defined", " ", "after", " ", "A3"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"Vs", " ", "=", " ", 
         RowBox[{
          SqrtBox[
           RowBox[{"pz", "^", "2"}]], "/", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["pz", "2"], "+", 
            SuperscriptBox["x", "2"]}]]}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Formula", "  ", "A4"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Vh", "=", 
         RowBox[{
          SuperscriptBox["Vs", "2"], 
          FractionBox["1", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["x", "2"], "/", 
              SuperscriptBox["Eb", "2"]}]}]]]}]}], ";"}], 
       RowBox[{"(*", 
        RowBox[{"Formula", "  ", "A5"}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ff", "=", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Beta]", " ", "w"}], "]"}], "+", "1"}]]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Distribution", " ", "funcion", " ", "for", " ", "fermion"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"fb", "=", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Beta]", " ", "w"}], "]"}], "-", "1"}]]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Distribution", " ", "funcion", " ", "for", " ", "boson"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ff1", "=", 
        RowBox[{"D", "[", 
         RowBox[{"ff", ",", "w"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Derivative", " ", "of", " ", "Distribution", " ", "funcion", " ", 
         "for", " ", "fermion"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"fb1", "=", 
        RowBox[{"D", "[", 
         RowBox[{"fb", ",", "w"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Derivative", " ", "of", " ", "Distribution", " ", "funcion", " ", 
         "for", " ", "boson"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ff2", "=", 
        RowBox[{"D", "[", 
         RowBox[{"ff1", ",", "w"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Second", " ", "Derivative", " ", "of", " ", "Distribution", " ", 
         "funcion", " ", "for", " ", "fermion"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"fb2", "=", 
        RowBox[{"D", "[", 
         RowBox[{"fb1", ",", "w"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Second", " ", "Derivative", " ", "of", " ", "Distribution", " ", 
         "funcion", " ", "for", " ", "boson"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"h", "[", "z_", "]"}], ":=", 
        RowBox[{
         FractionBox["h0", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Tanh", "[", 
            FractionBox["z", "Lh"], "]"}], "+", "1"}], ")"}]}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"*", "equation", " ", 
         RowBox[{"(", "50", ")"}], " ", "LEFT", " ", "MOVING", " ", 
         RowBox[{"WALL", "!!"}]}], "**)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", "z_", "]"}], ":=", 
          RowBox[{
           FractionBox["s0", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Tanh", "[", 
              RowBox[{
               FractionBox["z", "Ls"], "-", "ds"}], "]"}]}], ")"}]}]}], ";"}],
         "*)"}], 
       RowBox[{"(*", 
        RowBox[{"*", "equation", " ", 
         RowBox[{"(", "50", ")"}]}], "**)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"s", "[", "z_", "]"}], ":=", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"sl", "-", "sh"}], "2"], 
          RowBox[{"Tanh", "[", 
           RowBox[{
            FractionBox["z", "Ls"], "-", "ds"}], "]"}]}], "+", 
         FractionBox[
          RowBox[{"sl", "+", "sh"}], "2"]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mt", "[", "z_", "]"}], ":=", 
        RowBox[{
         FractionBox["0.99571", 
          SqrtBox["2"]], " ", 
         RowBox[{"h", "[", "z", "]"}], 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"s", "[", "z", "]"}], "2"], 
            SuperscriptBox["\[CapitalLambda]CP", "2"]]}]]}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"*", "equation", " ", 
         RowBox[{"(", "49", ")"}]}], "**)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "z_", "]"}], ":=", 
        RowBox[{"ArcTan", "[", 
         FractionBox[
          RowBox[{"s", "[", "z", "]"}], "\[CapitalLambda]CP"], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"*", "equation", " ", 
         RowBox[{"(", "49", ")"}]}], "**)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mb", "[", "z_", "]"}], ":=", 
        RowBox[{"4.2", "*", 
         RowBox[{
          RowBox[{"h", "[", "z", "]"}], "/", "h0"}]}]}], " ", ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mh", "[", "z_", "]"}], ":=", 
        RowBox[{"125.3", "*", 
         RowBox[{
          RowBox[{"h", "[", "z", "]"}], "/", "h0"}]}]}], " ", ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]m", "[", "z_", "]"}], ":=", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"mt", "[", "z", "]"}], "2"], "/", 
         RowBox[{"(", 
          RowBox[{"63", " ", "Tn"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mW", "[", "z_", "]"}], ":=", 
        RowBox[{"0.65", " ", 
         RowBox[{
          RowBox[{"h", "[", "z", "]"}], "/", "2"}]}]}], " ", 
       RowBox[{"(*", 
        RowBox[{"W", " ", "boson", " ", "mass"}], "*)"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]h", "[", "z_", "]"}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{"mW", "[", "z", "]"}], "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"50", "Tn"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Xmax", "=", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"mt", "[", "inf", "]"}], ",", 
            RowBox[{"mh", "[", "inf", "]"}], ",", 
            RowBox[{"mb", "[", "inf", "]"}], ",", 
            RowBox[{"mW", "[", "inf", "]"}]}], "}"}], "]"}], "+", "0.1"}]}], 
       RowBox[{"(*", 
        RowBox[{
        "Max", " ", "value", " ", "of", " ", "x", " ", "used", " ", "for", 
         " ", "interpolating", " ", "coefficient", " ", "functions"}], "*)"}],
        ";", 
       RowBox[{
        RowBox[{"Kf0", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{"3", 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          SuperscriptBox["\[Pi]", "2"]], 
         RowBox[{"\[Beta]", "^", "2"}], " ", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pw", " ", "Eb", " ", "ff"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", "xi"}], ",", 
              RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"Formula", " ", 
         RowBox[{"(", "43", ")"}], " ", "for", " ", "fermions"}], "*)"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Kb0", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{"3", 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          SuperscriptBox["\[Pi]", "2"]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pw", " ", "Eb", " ", "fb"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", "xi"}], ",", 
              RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"Formula", " ", 
         RowBox[{"(", "43", ")"}], " ", "for", " ", "bosons"}], "*)"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Kf0inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Kf0", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Kb0inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Kb0", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"K0t", "[", "z_", "]"}], ":=", 
        RowBox[{"Kf0inter", "[", 
         RowBox[{"mt", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"K0b", "[", "z_", "]"}], ":=", 
        RowBox[{"Kf0inter", "[", 
         RowBox[{"mb", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"K0h", "[", "z_", "]"}], ":=", 
        RowBox[{"Kb0inter", "[", 
         RowBox[{"mh", "[", "z", "]"}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"Df0", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          SuperscriptBox["\[Pi]", "2"]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pw", " ", "Eb", " ", "ff1"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", "xi"}], ",", 
              RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "26", ")"}], " ", "for", " ", "fermions"}], ",", " ", 
         RowBox[{"l", "=", "0"}]}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Db0", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          SuperscriptBox["\[Pi]", "2"]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pw", " ", "Eb", " ", "fb1"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", "xi"}], ",", 
              RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "26", ")"}], " ", "for", " ", "bosons"}], ",", " ", 
         RowBox[{"l", "=", "0"}]}], "*)"}], ";", 
       RowBox[{"Df0inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Df0", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Db0inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Db0", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D0t", "[", "z_", "]"}], ":=", 
        RowBox[{"Df0inter", "[", 
         RowBox[{"mt", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D0b", "[", "z_", "]"}], ":=", 
        RowBox[{"Df0inter", "[", 
         RowBox[{"mb", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D0h", "[", "z_", "]"}], ":=", 
        RowBox[{"Db0inter", "[", 
         RowBox[{"mh", "[", "z", "]"}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"Df1", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          SuperscriptBox["\[Pi]", "2"]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pw", " ", "pz", " ", "ff1"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", "xi"}], ",", 
              RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "26", ")"}], " ", "for", " ", "fermions"}], ",", " ", 
         RowBox[{"l", "=", "1"}]}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Db1", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          SuperscriptBox["\[Pi]", "2"]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pw", " ", "pz", " ", "fb1"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", "xi"}], ",", 
              RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "26", ")"}], " ", "for", " ", "bosons"}], ",", " ", 
         RowBox[{"l", "=", "1"}]}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Df1inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Df1", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Db1inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Db1", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D1t", "[", "z_", "]"}], ":=", 
        RowBox[{"Df1inter", "[", 
         RowBox[{"mt", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D1b", "[", "z_", "]"}], ":=", 
        RowBox[{"Df1inter", "[", 
         RowBox[{"mb", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D1h", "[", "z_", "]"}], ":=", 
        RowBox[{"Db1inter", "[", 
         RowBox[{"mh", "[", "z", "]"}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"Df2", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          SuperscriptBox["\[Pi]", "2"]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"pw", " ", 
               SuperscriptBox["pz", "2"]}], "Eb"], " ", "ff1"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", "xi"}], ",", 
              RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "26", ")"}], " ", "for", " ", "fermions"}], ",", " ", 
         RowBox[{"l", "=", "2"}]}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Db2", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          SuperscriptBox["\[Pi]", "2"]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"pw", " ", 
               SuperscriptBox["pz", "2"]}], "Eb"], " ", "fb1"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", "xi"}], ",", 
              RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "26", ")"}], " ", "for", " ", "bosons"}], ",", " ", 
         RowBox[{"l", "=", "2"}]}], "*)"}], ";", 
       RowBox[{"Df2inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Df2", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Db2inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Db2", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D2t", "[", "z_", "]"}], ":=", 
        RowBox[{"Df2inter", "[", 
         RowBox[{"mt", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D2b", "[", "z_", "]"}], ":=", 
        RowBox[{"Df2inter", "[", 
         RowBox[{"mb", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D2h", "[", "z_", "]"}], ":=", 
        RowBox[{"Db2inter", "[", 
         RowBox[{"mh", "[", "z", "]"}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"Qf1", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Pi]", "2"]}]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pw", "  ", "ff2"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", "xi"}], ",", 
              RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
       
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "27", ")"}], " ", "for", " ", "fermions"}], ",", " ", 
         RowBox[{"l", "=", "1"}]}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Qb1", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          RowBox[{"2", 
           SuperscriptBox["\[Pi]", "2"]}]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"xi", "\[Equal]", "0"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{"Integrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pw", "  ", "fb2"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "\[Rule]", "0"}], ",", 
                  RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", 
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "0", ",", "\[Infinity]", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"Method", "\[Rule]", "PrincipalValue"}]}], "]"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pw", "  ", "fb2"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "\[Rule]", "xi"}], ",", 
                RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
             RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}], 
          "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "27", ")"}], " ", "for", " ", "bosons"}], ",", " ", 
         RowBox[{"l", "=", "1"}]}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Qf1inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Qf1", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Qb1inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Qb1", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q1t", "[", "z_", "]"}], ":=", 
        RowBox[{"Qf1inter", "[", 
         RowBox[{"mt", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q1b", "[", "z_", "]"}], ":=", 
        RowBox[{"Qf1inter", "[", 
         RowBox[{"mb", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q1h", "[", "z_", "]"}], ":=", 
        RowBox[{"Qb1inter", "[", 
         RowBox[{"mh", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Qf2", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          RowBox[{"2", 
           SuperscriptBox["\[Pi]", "2"]}]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"pw", " ", "pz"}], "Eb"], " ", "ff2"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", "xi"}], ",", 
              RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "27", ")"}], " ", "for", " ", "fermions"}], ",", " ", 
         RowBox[{"l", "=", "2"}]}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Qb2", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          RowBox[{"2", 
           SuperscriptBox["\[Pi]", "2"]}]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"xi", "\[Equal]", "0"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{"Integrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{"pw", " ", "pz"}], "Eb"], " ", "fb2"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "\[Rule]", "xi"}], ",", 
                  RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", 
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "xi", ",", "\[Infinity]", ",", "xi"}], "}"}], 
             ",", 
             RowBox[{"Method", "\[Rule]", "PrincipalValue"}]}], "]"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"pw", " ", "pz"}], "Eb"], " ", "fb2"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "\[Rule]", "xi"}], ",", 
                RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}], 
          "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "27", ")"}], " ", "for", " ", "bosons"}], ",", " ", 
         RowBox[{"l", "=", "2"}]}], "*)"}], ";", 
       RowBox[{"Qf2inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Qf2", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Qb2inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Qb2", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q2t", "[", "z_", "]"}], ":=", 
        RowBox[{"Qf2inter", "[", 
         RowBox[{"mt", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q2b", "[", "z_", "]"}], ":=", 
        RowBox[{"Qf2inter", "[", 
         RowBox[{"mb", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q2h", "[", "z_", "]"}], ":=", 
        RowBox[{"Qb2inter", "[", 
         RowBox[{"mh", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Q1fo8integrand", "=", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"pw", " "}], 
                 RowBox[{"pz", " "}]], " ", "Vh", " ", "ff1"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", "0"}], ",", 
                 RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", "y"}], 
             "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"y", "\[Rule]", "1"}], "}"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"pw", " "}], 
                 RowBox[{"pz", " "}]], " ", "Vh", " ", "ff1"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", "0"}], ",", 
                 RowBox[{"vw", "\[Rule]", "vi"}]}], "}"}]}], ",", "y"}], 
             "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"y", "\[Rule]", 
              RowBox[{"-", "1"}]}], "}"}]}], ")"}]}], "]"}]}], ";", 
       RowBox[{"Q1bo8integrand", "=", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"pw", " "}], 
                 RowBox[{"pz", " "}]], " ", "Vh", " ", "fb1"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", "0"}], ",", 
                 RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", "y"}], 
             "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"y", "\[Rule]", "1"}], "}"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"pw", " "}], 
                 RowBox[{"pz", " "}]], " ", "Vh", " ", "fb1"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", "0"}], ",", 
                 RowBox[{"vw", "\[Rule]", "vi"}]}], "}"}]}], ",", "y"}], 
             "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"y", "\[Rule]", 
              RowBox[{"-", "1"}]}], "}"}]}], ")"}]}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"Q1fo8", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox["1", "2"], 
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          SuperscriptBox["\[Pi]", "2"]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"xi", "\[Equal]", "0"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{"Q1fo8integrand", ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "0", ",", "\[Infinity]", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"Method", "\[Rule]", "PrincipalValue"}]}], "]"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"pw", " "}], 
                RowBox[{"pz", " "}]], " ", "Vh", " ", "ff1"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "\[Rule]", "xi"}], ",", 
                RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}], 
          "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "40", ")"}], " ", "for", " ", "fermions"}], ",", " ", 
         RowBox[{"l", "=", "1"}], ",", " ", 
         RowBox[{"helicity", " ", "eigenstates"}]}], "*)"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q1bo8", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox["1", "2"], 
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          SuperscriptBox["\[Pi]", "2"]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"xi", "\[Equal]", "0"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{"Q1bo8integrand", ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "0", ",", "\[Infinity]", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"Method", "\[Rule]", "PrincipalValue"}]}], "]"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"pw", " "}], 
                RowBox[{"pz", " "}]], " ", "Vh", " ", "fb1"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "\[Rule]", "xi"}], ",", 
                RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}], 
          "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "40", ")"}], " ", "for", " ", "bosons"}], ",", " ", 
         RowBox[{"l", "=", "1"}], ",", " ", 
         RowBox[{"helicity", " ", "eigenstates"}]}], "*)"}], ";", 
       RowBox[{"Q1fo8inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Q1fo8", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Q1bo8inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Q1bo8", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q1o8t", "[", "z_", "]"}], ":=", 
        RowBox[{"Q1fo8inter", "[", 
         RowBox[{"mt", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q1o8b", "[", "z_", "]"}], ":=", 
        RowBox[{"Q1fo8inter", "[", 
         RowBox[{"mb", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q1o8h", "[", "z_", "]"}], ":=", 
        RowBox[{"Q1bo8inter", "[", 
         RowBox[{"mh", "[", "z", "]"}], "]"}]}], ";", 
       RowBox[{"Q2fo8integrand", "=", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"pw", " "}], 
                 RowBox[{"Eb", " "}]], " ", "Vh", " ", "ff1"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", "0"}], ",", 
                 RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", "y"}], 
             "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"y", "\[Rule]", "1"}], "}"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"pw", " "}], 
                 RowBox[{"Eb", " "}]], " ", "Vh", " ", "ff1"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", "0"}], ",", 
                 RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", "y"}], 
             "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"y", "\[Rule]", 
              RowBox[{"-", "1"}]}], "}"}]}], ")"}]}], "]"}]}], ";", 
       RowBox[{"Q2bo8integrand", "=", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"pw", " "}], 
                 RowBox[{"Eb", " "}]], " ", "Vh", " ", "fb1"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", "0"}], ",", 
                 RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", "y"}], 
             "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"y", "\[Rule]", "1"}], "}"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"pw", " "}], 
                 RowBox[{"Eb", " "}]], " ", "Vh", " ", "fb1"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", "0"}], ",", 
                 RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", "y"}], 
             "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"y", "\[Rule]", 
              RowBox[{"-", "1"}]}], "}"}]}], ")"}]}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"Q2fo8", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox["1", "2"], 
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          SuperscriptBox["\[Pi]", "2"]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"xi", "\[Equal]", "0"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{"Q2fo8integrand", ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "0", ",", "\[Infinity]", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"Method", "\[Rule]", "PrincipalValue"}]}], "]"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"pw", " "}], 
                RowBox[{"Eb", " "}]], " ", "Vh", " ", "ff1"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "\[Rule]", "xi"}], ",", 
                RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}], 
          "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "40", ")"}], " ", "for", " ", "fermions"}], ",", " ", 
         RowBox[{"l", "=", "2"}], ",", " ", 
         RowBox[{"helicity", " ", "eigenstates"}]}], "*)"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q2bo8", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox["1", "2"], 
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          SuperscriptBox["\[Pi]", "2"]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"xi", "\[Equal]", "0"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{"Q2bo8integrand", ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "0", ",", "\[Infinity]", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"Method", "\[Rule]", "PrincipalValue"}]}], "]"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"pw", " "}], 
                RowBox[{"Eb", " "}]], " ", "Vh", " ", "fb1"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "\[Rule]", "xi"}], ",", 
                RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}], 
          "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "40", ")"}], " ", "for", " ", "bosons"}], ",", " ", 
         RowBox[{"l", "=", "2"}], ",", " ", 
         RowBox[{"helicity", " ", "eigenstates"}]}], "*)"}], ";", 
       RowBox[{"Q2fo8inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Q2fo8", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Q2bo8inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Q2bo8", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q2o8t", "[", "z_", "]"}], ":=", 
        RowBox[{"Q2fo8inter", "[", 
         RowBox[{"mt", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q2o8b", "[", "z_", "]"}], ":=", 
        RowBox[{"Q2fo8inter", "[", 
         RowBox[{"mb", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q2o8h", "[", "z_", "]"}], ":=", 
        RowBox[{"Q2bo8inter", "[", 
         RowBox[{"mh", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Q1fo9integrand", "=", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"pw", " "}], 
                 RowBox[{"pz", " "}]], 
                RowBox[{"Vh", "/", "Eb"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"ff1", "/", "Eb"}], "-", 
                  RowBox[{
                   RowBox[{"1", "/", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["vw", "2"]}]]}], "ff2"}]}], ")"}]}], "/.", 
               
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", "0"}], ",", 
                 RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", "y"}], 
             "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"y", "\[Rule]", "1"}], "}"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"pw", " "}], 
                 RowBox[{"pz", " "}]], 
                RowBox[{"Vh", "/", "Eb"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"ff1", "/", "Eb"}], "-", 
                  RowBox[{
                   RowBox[{"1", "/", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["vw", "2"]}]]}], "ff2"}]}], ")"}]}], "/.", 
               
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", "0"}], ",", 
                 RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", "y"}], 
             "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"y", "\[Rule]", 
              RowBox[{"-", "1"}]}], "}"}]}], ")"}]}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"Q1fo9", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          RowBox[{"4", 
           SuperscriptBox["\[Pi]", "2"]}]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"xi", "\[Equal]", "0"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{"Q1fo9integrand", ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "0", ",", "\[Infinity]", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"Method", "\[Rule]", "PrincipalValue"}]}], "]"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"pw", " "}], 
                RowBox[{"pz", " "}]], 
               RowBox[{"Vh", "/", "Eb"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ff1", "/", "Eb"}], "-", 
                 RowBox[{
                  RowBox[{"1", "/", 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["vw", "2"]}]]}], "ff2"}]}], ")"}]}], "/.", 
              
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "\[Rule]", "xi"}], ",", 
                RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}], 
          "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "41", ")"}]}], ",", " ", 
         RowBox[{"l", "=", "1"}], ",", " ", 
         RowBox[{"helicity", " ", "eigenstates"}]}], "*)"}], ";", 
       RowBox[{"Q1fo9nter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Q1fo9", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q1o9t", "[", "z_", "]"}], ":=", 
        RowBox[{"Q1fo9nter", "[", 
         RowBox[{"mt", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q1o9b", "[", "z_", "]"}], ":=", 
        RowBox[{"Q1fo9nter", "[", 
         RowBox[{"mb", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Q2fo9integrand", "=", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"pw", " "}], 
                 RowBox[{"Eb", "^", "2"}]], "Vh", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"ff1", "/", "Eb"}], "-", 
                  RowBox[{
                   RowBox[{"1", "/", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["vi", "2"]}]]}], "ff2"}]}], ")"}]}], "/.", 
               
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", "0"}], ",", 
                 RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", "y"}], 
             "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"y", "\[Rule]", "1"}], "}"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"pw", " "}], 
                 RowBox[{"Eb", "^", "2"}]], "Vh", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"ff1", "/", "Eb"}], "-", 
                  RowBox[{
                   RowBox[{"1", "/", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["vi", "2"]}]]}], "ff2"}]}], ")"}]}], "/.", 
               
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", "0"}], ",", 
                 RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", "y"}], 
             "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"y", "\[Rule]", 
              RowBox[{"-", "1"}]}], "}"}]}], ")"}]}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"Q2fo9", "[", 
         RowBox[{"xi_", ",", "vi_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["vi", "2"]}]]}], 
          RowBox[{"4", 
           SuperscriptBox["\[Pi]", "2"]}]], 
         RowBox[{"\[Beta]", "^", "2"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"xi", "\[Equal]", "0"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{"Q2fo9integrand", ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "0", ",", "\[Infinity]", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"Method", "\[Rule]", "PrincipalValue"}]}], "]"}], ",", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"pw", " "}], 
                RowBox[{"Eb", "^", "2"}]], "Vh", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ff1", "/", "Eb"}], "-", 
                 RowBox[{
                  RowBox[{"1", "/", 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["vi", "2"]}]]}], "ff2"}]}], ")"}]}], "/.", 
              
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "\[Rule]", "xi"}], ",", 
                RowBox[{"vvw", "\[Rule]", "vi"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "xi", ",", "\[Infinity]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"WorkingPrecision", "\[Rule]", "15"}]}], "]"}]}], 
          "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "41", ")"}], " ", "for", " ", "fermions"}], ",", " ", 
         RowBox[{"l", "=", "2"}], ",", " ", 
         RowBox[{"helicity", " ", "eigenstates"}]}], "*)"}], ";", 
       RowBox[{"Q2fo9inter", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Q2fo9", "[", 
              RowBox[{"x", ",", "vw"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "Xmax", ",", 
             RowBox[{"Xmax", "/", "10"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"Q2o9t", "[", "z_", "]"}], ":=", 
        RowBox[{"Q2fo9inter", "[", 
         RowBox[{"mt", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Q2o9b", "[", "z_", "]"}], ":=", 
        RowBox[{"Q2fo9inter", "[", 
         RowBox[{"mb", "[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"St1", "[", "zz_", "]"}], ":=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"-", "vw", " "}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["vw", "2"]}]]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"mt", "[", "z", "]"}], "2"], 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z"}], "]"}]}], 
                ",", "z"}], "]"}], 
              RowBox[{"Q1o8t", "[", "z", "]"}]}], "-", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"mt", "[", "z", "]"}], ")"}], "2"], ",", "z"}], 
               "]"}], 
              SuperscriptBox[
               RowBox[{"mt", "[", "z", "]"}], "2"], 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z"}], "]"}], 
              RowBox[{"Q1o9t", "[", "z", "]"}]}]}], ")"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"z", "\[Rule]", "zz"}], "}"}]}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"Sb1", "[", "zz_", "]"}], ":=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"-", "vw", " "}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["vw", "2"]}]]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"mb", "[", "z", "]"}], "2"], 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z"}], "]"}]}], 
                ",", "z"}], "]"}], 
              RowBox[{"Q1o8b", "[", "z", "]"}]}], "-", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"mb", "[", "z", "]"}], ")"}], "2"], ",", "z"}], 
               "]"}], 
              SuperscriptBox[
               RowBox[{"mb", "[", "z", "]"}], "2"], 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z"}], "]"}], 
              RowBox[{"Q1o9b", "[", "z", "]"}]}]}], ")"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"z", "\[Rule]", "zz"}], "}"}]}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"St2", "[", "zz_", "]"}], ":=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"-", "vw", " "}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["vw", "2"]}]]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"mt", "[", "z", "]"}], "2"], 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z"}], "]"}]}], 
                ",", "z"}], "]"}], 
              RowBox[{"Q2o8t", "[", "z", "]"}]}], "-", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"mt", "[", "z", "]"}], ")"}], "2"], ",", "z"}], 
               "]"}], 
              SuperscriptBox[
               RowBox[{"mt", "[", "z", "]"}], "2"], 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z"}], "]"}], 
              RowBox[{"Q2o9t", "[", "z", "]"}]}]}], ")"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"z", "\[Rule]", "zz"}], "}"}]}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"Sb2", "[", "zz_", "]"}], ":=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"-", "vw", " "}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["vw", "2"]}]]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"mb", "[", "z", "]"}], "2"], 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z"}], "]"}]}], 
                ",", "z"}], "]"}], 
              RowBox[{"Q2o8b", "[", "z", "]"}]}], "-", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"mb", "[", "z", "]"}], ")"}], "2"], ",", "z"}], 
               "]"}], 
              SuperscriptBox[
               RowBox[{"mb", "[", "z", "]"}], "2"], 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z"}], "]"}], 
              RowBox[{"Q2o9b", "[", "z", "]"}]}]}], ")"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"z", "\[Rule]", "zz"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]htot", "[", "z_", "]"}], ":=", 
        RowBox[{
         RowBox[{"D2h", "[", "z", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"Dh", " ", 
           RowBox[{"D0h", "[", "z", "]"}]}], ")"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"W", " ", "scattering", " ", 
         RowBox[{"rate", ".", " ", "This"}], " ", "was", " ", "not", " ", 
         "provided", " ", "in", " ", "the", " ", "paper", " ", "and", " ", 
         "we", " ", "took", " ", "it", " ", "directly", " ", "from", " ", 
         RowBox[{"ref", " ", "[", "47", "]"}], " ", "0605242"}], "*)"}], ";", 
       
       RowBox[{
        RowBox[{"\[CapitalGamma]ttot", "[", "z_", "]"}], ":=", 
        RowBox[{
         RowBox[{"D2t", "[", "z", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"Dq", " ", 
           RowBox[{"D0t", "[", "z", "]"}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]btot", "[", "z_", "]"}], ":=", 
        RowBox[{
         RowBox[{"D2b", "[", "z", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"Dq", " ", 
           RowBox[{"D0b", "[", "z", "]"}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Delta]CtL1", "[", "z_", "]"}], ":=", 
        RowBox[{"\[Beta]", " ", 
         RowBox[{"K0t", "[", "z", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]y", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]tl", "[", "z", "]"}], "-", 
              RowBox[{"\[Mu]tr", "[", "z", "]"}], "+", 
              RowBox[{"\[Mu]h", "[", "z", "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"\[CapitalGamma]m", "[", "z", "]"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]tl", "[", "z", "]"}], "-", 
              RowBox[{"\[Mu]tr", "[", "z", "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"\[CapitalGamma]htot", "[", "z", "]"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]tl", "[", "z", "]"}], "-", 
              RowBox[{"\[Mu]bl", "[", "z", "]"}]}], ")"}]}], "+", " ", 
           RowBox[{"\[CapitalGamma]SS", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"9", 
                  RowBox[{"D0t", "[", "z", "]"}]}]}], ")"}], 
               RowBox[{"\[Mu]tl", "[", "z", "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"9", 
                  RowBox[{"D0b", "[", "z", "]"}]}]}], ")"}], 
               RowBox[{"\[Mu]bl", "[", "z", "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"9", 
                  RowBox[{"D0t", "[", "z", "]"}]}]}], ")"}], 
               RowBox[{"\[Mu]tr", "[", "z", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Formula", " ", 
          RowBox[{"(", "53", ")"}]}], ",", " ", 
         RowBox[{
         "we", " ", "divide", " ", "by", " ", "T", " ", "to", " ", "get", " ",
           "dimensions", " ", "right"}]}], "*)"}], ";", 
       RowBox[{
        RowBox[{"\[Delta]CtL2", "[", "z_", "]"}], ":=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[CapitalGamma]ttot", "[", "z", "]"}]}], 
           RowBox[{"utl", "[", "z", "]"}]}], "-", 
          RowBox[{"vw", " ", 
           RowBox[{"\[Delta]CtL1", "[", "z", "]"}]}]}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Delta]CbL1", "[", "z_", "]"}], ":=", 
        RowBox[{"\[Beta]", " ", 
         RowBox[{"K0b", "[", "z", "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]y", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]bl", "[", "z", "]"}], "-", 
              RowBox[{"\[Mu]tr", "[", "z", "]"}], "+", 
              RowBox[{"\[Mu]h", "[", "z", "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"\[CapitalGamma]htot", "[", "z", "]"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]bl", "[", "z", "]"}], "-", 
              RowBox[{"\[Mu]tl", "[", "z", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[CapitalGamma]SS", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"9", 
                  RowBox[{"D0t", "[", "z", "]"}]}]}], ")"}], 
               RowBox[{"\[Mu]tl", "[", "z", "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"9", 
                  RowBox[{"D0b", "[", "z", "]"}]}]}], ")"}], 
               RowBox[{"\[Mu]bl", "[", "z", "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"9", 
                  RowBox[{"D0t", "[", "z", "]"}]}]}], ")"}], 
               RowBox[{"\[Mu]tr", "[", "z", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ";", 
       RowBox[{
        RowBox[{"\[Delta]CbL2", "[", "z_", "]"}], ":=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[CapitalGamma]btot", "[", "z", "]"}]}], 
           RowBox[{"ubl", "[", "z", "]"}]}], "-", 
          RowBox[{"vw", " ", 
           RowBox[{"\[Delta]CbL1", "[", "z", "]"}]}]}], ")"}]}], ";", 
       RowBox[{
        RowBox[{"\[Delta]CtR1", "[", "z_", "]"}], ":=", 
        RowBox[{"\[Beta]", " ", 
         RowBox[{"K0t", "[", "z", "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[CapitalGamma]y"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]tl", "[", "z", "]"}], "+", 
              RowBox[{"\[Mu]bl", "[", "z", "]"}], "-", 
              RowBox[{"2", 
               RowBox[{"\[Mu]tr", "[", "z", "]"}]}], "+", 
              RowBox[{"2", 
               RowBox[{"\[Mu]h", "[", "z", "]"}]}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"\[CapitalGamma]m", "[", "z", "]"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]tl", "[", "z", "]"}], "-", 
              RowBox[{"\[Mu]tr", "[", "z", "]"}]}], ")"}]}], "-", 
           RowBox[{"\[CapitalGamma]SS", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"9", 
                  RowBox[{"D0t", "[", "z", "]"}]}]}], ")"}], 
               RowBox[{"\[Mu]tl", "[", "z", "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"9", 
                  RowBox[{"D0b", "[", "z", "]"}]}]}], ")"}], 
               RowBox[{"\[Mu]bl", "[", "z", "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"9", 
                  RowBox[{"D0t", "[", "z", "]"}]}]}], ")"}], 
               RowBox[{"\[Mu]tr", "[", "z", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Delta]CtR2", "[", "z_", "]"}], ":=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[CapitalGamma]ttot", "[", "z", "]"}]}], 
           RowBox[{"utr", "[", "z", "]"}]}], "-", 
          RowBox[{"vw", " ", 
           RowBox[{"\[Delta]CtR1", "[", "z", "]"}]}]}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Delta]Ch1", "[", "z_", "]"}], ":=", 
        RowBox[{"\[Beta]", " ", 
         RowBox[{"K0h", "[", "z", "]"}], 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"\[CapitalGamma]y", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]tl", "[", "z", "]"}], "+", 
              RowBox[{"\[Mu]bl", "[", "z", "]"}], "-", 
              RowBox[{"2", 
               RowBox[{"\[Mu]tr", "[", "z", "]"}]}], "+", 
              RowBox[{"2", 
               RowBox[{"\[Mu]h", "[", "z", "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"\[CapitalGamma]h", "[", "z", "]"}], " ", 
            RowBox[{"\[Mu]h", "[", "z", "]"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Delta]Ch2", "[", "z_", "]"}], ":=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[CapitalGamma]htot", "[", "z", "]"}]}], 
           RowBox[{"uh", "[", "z", "]"}]}], "-", 
          RowBox[{"vw", " ", 
           RowBox[{"\[Delta]Ch1", "[", "z", "]"}]}]}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"htl", ",", "htr", ",", "hbl"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], ";", 
       RowBox[{"TopLeft1", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"D1t", "[", "z", "]"}]}], " ", 
            RowBox[{
             RowBox[{"\[Mu]tl", "'"}], "[", "z", "]"}]}], "+", 
           RowBox[{
            RowBox[{"utl", "'"}], "[", "z", "]"}], "+", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mt", "[", "z", "]"}], ")"}], "2"], ",", "z"}], "]"}], 
            FractionBox["vw", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["vw", "2"]}]]], " ", 
            RowBox[{"Q1t", "[", "z", "]"}], " ", 
            RowBox[{"\[Mu]tl", "[", "z", "]"}]}], "-", 
           RowBox[{"\[Delta]CtL1", "[", "z", "]"}]}], "\[Equal]", 
          RowBox[{"htl", " ", 
           RowBox[{"St1", "[", "z", "]"}]}]}], "}"}]}], ";", 
       RowBox[{"TopLeft2", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"D2t", "[", "z", "]"}]}], " ", 
            RowBox[{
             RowBox[{"\[Mu]tl", "'"}], "[", "z", "]"}]}], "-", 
           RowBox[{"vw", " ", 
            RowBox[{
             RowBox[{"utl", "'"}], "[", "z", "]"}]}], "+", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mt", "[", "z", "]"}], ")"}], "2"], ",", "z"}], "]"}], 
            FractionBox["vw", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["vw", "2"]}]]], " ", 
            RowBox[{"Q2t", "[", "z", "]"}], " ", 
            RowBox[{"\[Mu]tl", "[", "z", "]"}]}], "-", 
           RowBox[{"\[Delta]CtL2", "[", "z", "]"}]}], "\[Equal]", " ", 
          RowBox[{"htl", " ", 
           RowBox[{"St2", "[", "z", "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"BottomLeft1", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"D1b", "[", "z", "]"}]}], " ", 
            RowBox[{
             RowBox[{"\[Mu]bl", "'"}], "[", "z", "]"}]}], "+", 
           RowBox[{
            RowBox[{"ubl", "'"}], "[", "z", "]"}], "+", " ", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mb", "[", "z", "]"}], ")"}], "2"], ",", "z"}], "]"}], 
            FractionBox["vw", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["vw", "2"]}]]], 
            RowBox[{"Q1b", "[", "z", "]"}], " ", 
            RowBox[{"\[Mu]bl", "[", "z", "]"}]}], "-", 
           RowBox[{"\[Delta]CbL1", "[", "z", "]"}]}], "\[Equal]", 
          RowBox[{"hbl", " ", 
           RowBox[{"Sb1", "[", "z", "]"}]}]}], "}"}]}], ";", 
       RowBox[{"BottomLeft2", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"D2b", "[", "z", "]"}]}], " ", 
            RowBox[{
             RowBox[{"\[Mu]bl", "'"}], "[", "z", "]"}]}], "-", 
           RowBox[{"vw", " ", 
            RowBox[{
             RowBox[{"ubl", "'"}], "[", "z", "]"}]}], "+", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mb", "[", "z", "]"}], ")"}], "2"], ",", "z"}], "]"}], 
            FractionBox["vw", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["vw", "2"]}]]], " ", 
            RowBox[{"Q2b", "[", "z", "]"}], " ", 
            RowBox[{"\[Mu]bl", "[", "z", "]"}]}], "-", 
           RowBox[{"\[Delta]CbL2", "[", "z", "]"}]}], "\[Equal]", 
          RowBox[{"hbl", " ", 
           RowBox[{"Sb2", "[", "z", "]"}]}]}], "}"}]}], ";", 
       RowBox[{"TopRight1", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"D1t", "[", "z", "]"}]}], " ", 
            RowBox[{
             RowBox[{"\[Mu]tr", "'"}], "[", "z", "]"}]}], "+", 
           RowBox[{
            RowBox[{"utr", "'"}], "[", "z", "]"}], "+", " ", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mt", "[", "z", "]"}], ")"}], "2"], ",", "z"}], "]"}], 
            FractionBox["vw", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["vw", "2"]}]]], 
            RowBox[{"Q1t", "[", "z", "]"}], " ", 
            RowBox[{"\[Mu]tr", "[", "z", "]"}]}], "-", 
           RowBox[{"\[Delta]CtR1", "[", "z", "]"}]}], "\[Equal]", 
          RowBox[{"htr", " ", 
           RowBox[{"St1", "[", "z", "]"}]}]}], "}"}]}], ";", 
       RowBox[{"TopRight2", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"D2t", "[", "z", "]"}]}], " ", 
            RowBox[{
             RowBox[{"\[Mu]tr", "'"}], "[", "z", "]"}]}], "-", 
           RowBox[{"vw", " ", 
            RowBox[{
             RowBox[{"utr", "'"}], "[", "z", "]"}]}], "+", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mt", "[", "z", "]"}], ")"}], "2"], ",", "z"}], "]"}], 
            FractionBox["vw", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["vw", "2"]}]]], " ", 
            RowBox[{"Q2t", "[", "z", "]"}], " ", 
            RowBox[{"\[Mu]tr", "[", "z", "]"}]}], "-", 
           RowBox[{"\[Delta]CtR2", "[", "z", "]"}]}], "\[Equal]", 
          RowBox[{"htr", " ", 
           RowBox[{"St2", "[", "z", "]"}]}]}], "}"}]}], ";", 
       RowBox[{"Higgs1", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"D1h", "[", "z", "]"}]}], " ", 
            RowBox[{
             RowBox[{"\[Mu]h", "'"}], "[", "z", "]"}]}], "+", 
           RowBox[{
            RowBox[{"uh", "'"}], "[", "z", "]"}], "+", " ", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mh", "[", "z", "]"}], ")"}], "2"], ",", "z"}], "]"}], 
            FractionBox["vw", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["vw", "2"]}]]], 
            RowBox[{"Q1h", "[", "z", "]"}], " ", 
            RowBox[{"\[Mu]h", "[", "z", "]"}]}], "-", 
           RowBox[{"\[Delta]Ch1", "[", "z", "]"}]}], "\[Equal]", "0"}], 
         "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Higgs2", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"D2h", "[", "z", "]"}]}], " ", 
            RowBox[{
             RowBox[{"\[Mu]h", "'"}], "[", "z", "]"}]}], "-", 
           RowBox[{"vw", " ", 
            RowBox[{
             RowBox[{"uh", "'"}], "[", "z", "]"}]}], "+", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mh", "[", "z", "]"}], ")"}], "2"], ",", "z"}], "]"}], 
            FractionBox["vw", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["vw", "2"]}]]], " ", 
            RowBox[{"Q2h", "[", "z", "]"}], " ", 
            RowBox[{"\[Mu]h", "[", "z", "]"}]}], "-", 
           RowBox[{"\[Delta]Ch2", "[", "z", "]"}]}], "\[Equal]", "0"}], 
         "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Bond", "=", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Mu]tl", "[", "inf", "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"\[Mu]tr", "[", "inf", "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"\[Mu]bl", "[", "inf", "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"\[Mu]h", "[", "inf", "]"}], "\[Equal]", "0"}], ",", " ", 
          RowBox[{
           RowBox[{"\[Mu]tl", "[", 
            RowBox[{"-", "inf"}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"\[Mu]tr", "[", 
            RowBox[{"-", "inf"}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"\[Mu]bl", "[", 
            RowBox[{"-", "inf"}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"\[Mu]h", "[", 
            RowBox[{"-", "inf"}], "]"}], "\[Equal]", "0"}]}], "}"}]}], ";", 
       RowBox[{"Equation", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
         "TopLeft1", ",", "TopLeft2", ",", "TopRight1", ",", "TopRight2", ",",
           "BottomLeft1", ",", "BottomLeft2", ",", "Higgs1", ",", "Higgs2", 
          ",", "Bond"}], "]"}]}], ";", 
       RowBox[{"sol", "=", 
        RowBox[{"NDSolve", "[", 
         RowBox[{"Equation", ",", 
          RowBox[{"{", 
           RowBox[{
           "\[Mu]tl", ",", "\[Mu]tr", ",", "\[Mu]bl", ",", "\[Mu]h", ",", " ",
             "utl", ",", "utr", ",", "ubl", ",", "uh"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "inf"}], ",", "inf"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Shooting\>\"", ",", 
             RowBox[{"Method", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<FixedStep\>\"", ",", 
                RowBox[{"Method", "\[Rule]", "\"\<ExplicitEuler\>\""}]}], 
               "}"}]}]}], "}"}]}], ",", 
          RowBox[{"StartingStepSize", "\[Rule]", 
           RowBox[{"2", 
            RowBox[{"inf", "/", "points"}]}]}]}], 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{"Method", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Shooting\>\"", ",", 
              RowBox[{"Method", "\[Rule]", "\"\<StiffnessSwitching\>\""}]}], 
             "}"}]}], ",", 
           RowBox[{"MaxStepSize", "\[Rule]", "0.01"}]}], "*)"}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"\[Mu]tlsol", "[", "z_", "]"}], ":=", 
        RowBox[{
         RowBox[{"\[Mu]tl", "[", "z", "]"}], "/.", 
         RowBox[{
          RowBox[{"sol", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
       RowBox[{
        RowBox[{"\[Mu]trsol", "[", "z_", "]"}], ":=", 
        RowBox[{
         RowBox[{"\[Mu]tr", "[", "z", "]"}], "/.", 
         RowBox[{
          RowBox[{"sol", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
       RowBox[{
        RowBox[{"\[Mu]blsol", "[", "z_", "]"}], ":=", 
        RowBox[{
         RowBox[{"\[Mu]bl", "[", "z", "]"}], "/.", 
         RowBox[{
          RowBox[{"sol", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], ";", 
       RowBox[{
        RowBox[{"\[Mu]hsol", "[", "z_", "]"}], ":=", 
        RowBox[{
         RowBox[{"\[Mu]h", "[", "z", "]"}], "/.", 
         RowBox[{
          RowBox[{"sol", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], ";", 
       RowBox[{
        RowBox[{"\[Mu]BL", "[", "z_", "]"}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"4", 
             RowBox[{"D0t", "[", "z", "]"}]}]}], ")"}], 
          RowBox[{"\[Mu]tlsol", "[", "z", "]"}]}], "+", 
         RowBox[{
          RowBox[{"1", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"4", 
             RowBox[{"D0b", "[", "z", "]"}]}]}], ")"}], 
          RowBox[{"\[Mu]blsol", "[", "z", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"D0t", "[", "z", "]"}], " ", 
          RowBox[{"\[Mu]trsol", "[", "z", "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fsph", "[", "z_", "]"}], ":=", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"2.5", " ", 
            RowBox[{"Tn", "/", "\[CapitalGamma]sph"}], " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "40"}], " ", 
              RowBox[{
               RowBox[{"h", "[", "z", "]"}], "/", "Tn"}]}], "]"}]}]}], "}"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"gdof", "=", 
        RowBox[{"gstar", "[", "Tn", "]"}]}], 
       RowBox[{"(*", "106.75", "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]B", "=", 
        RowBox[{"405", " ", 
         RowBox[{"\[CapitalGamma]sph", "/", 
          RowBox[{"(", 
           RowBox[{"4", 
            RowBox[{"\[Pi]", "^", "2"}], " ", "vw", " ", "gdof", " ", "Tn"}], 
           ")"}]}], 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"vw", "^", "2"}]}]], " ", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Mu]BL", "[", "z", "]"}], " ", 
            RowBox[{"fsph", "[", "z", " ", "]"}], 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "45"}], "\[CapitalGamma]sph", " ", 
              RowBox[{
               RowBox[{"Abs", "[", "z", "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"4", " ", 
                 RowBox[{"Abs", "[", "vw", "]"}]}], ")"}]}]}], 
             RowBox[{"(*", 
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"vw", "^", "2"}]}]], "*)"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", 
             RowBox[{"-", "inf"}], ",", "inf"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", "\"\<QuasiMonteCarlo\>\""}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "2"}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot2", "=", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"405", " ", 
           RowBox[{"\[CapitalGamma]sph", "/", 
            RowBox[{"(", 
             RowBox[{"4", 
              RowBox[{"\[Pi]", "^", "2"}], " ", "vw", " ", "gdof", " ", 
              "Tn"}], ")"}]}], 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"vw", "^", "2"}]}]], 
           RowBox[{"\[Mu]BL", "[", "z", "]"}], " ", 
           RowBox[{"fsph", "[", "z", " ", "]"}], 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "45"}], "\[CapitalGamma]sph", " ", 
              RowBox[{
               RowBox[{"Abs", "[", "z", "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"4", " ", 
                 RowBox[{"Abs", "[", "vw", "]"}]}], ")"}]}]}], 
             RowBox[{"(*", 
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"vw", "^", "2"}]}]], "*)"}], "]"}], "/", 
            "\[Eta]obs"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "inf"}], ",", "inf"}], "}"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*StyleBox[\"z\",FontSlant->\"Italic\"]\)\>\"", ",", 
             "\"\<d\[Eta]/\[Eta]obs\>\""}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot1", "=", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Mu]tlsol", "[", "z", "]"}], " ", "\[Beta]"}], ",", 
            RowBox[{
             RowBox[{"\[Mu]blsol", "[", "z", "]"}], " ", "\[Beta]"}], ",", 
            RowBox[{
             RowBox[{"\[Mu]hsol", "[", "z", "]"}], " ", "\[Beta]"}], ",", 
            RowBox[{
             RowBox[{"\[Mu]trsol", "[", "z", "]"}], "\[Beta]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "inf"}], ",", "inf"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(t\), \(L\)]\)\>\"", ",", 
             "\"\< \!\(\*SubscriptBox[\(b\), \(L\)]\)\>\"", ",", 
             "\"\< \!\(\*SubscriptBox[\(\[Mu]\), \(h\)]\)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(t\), \(R\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{
            SubscriptBox["v", "w"], "\[Equal]", 
            RowBox[{"-", "vw"}]}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*StyleBox[\"z\",FontSlant->\"Italic\"]\)\>\"", ",", 
             "\"\<\>\""}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"\[Eta]B", "/", "\[Eta]obs"}], "]"}], "]"}], ";"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"Plot1", ",", "Plot2", ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"\[Eta]B", "/", "\[Eta]obs"}], "]"}]}], "}"}], "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.812951936367523*^9, 3.813918365731222*^9, {3.813918996670391*^9, 
   3.81391900839305*^9}, {3.813925797426724*^9, 3.8139257977208853`*^9}, {
   3.8140030033337793`*^9, 3.814003003420074*^9}, {3.8140203786988697`*^9, 
   3.814020378878232*^9}, {3.814528738126328*^9, 3.814528762080665*^9}, {
   3.814528909713966*^9, 3.814528909815895*^9}, {3.814529009092401*^9, 
   3.814529013248003*^9}, {3.814529187014645*^9, 3.8145291876046133`*^9}, {
   3.814553375849618*^9, 3.814553376057053*^9}, {3.814600281929364*^9, 
   3.814600282638036*^9}, {3.814600350654479*^9, 3.814600351771901*^9}, 
   3.814602888363922*^9, {3.814602948496467*^9, 3.8146029486053762`*^9}, {
   3.814602999481325*^9, 3.814603001446226*^9}, {3.814603494695756*^9, 
   3.8146034955722513`*^9}, {3.814605803411208*^9, 3.814605804995459*^9}, 
   3.834142855649575*^9, {3.834146842013854*^9, 3.8341468791572123`*^9}, {
   3.834147050393942*^9, 3.834147052577129*^9}, {3.834147140462837*^9, 
   3.83414714088142*^9}, 3.834642373320788*^9, 3.834727205106162*^9, 
   3.835323645176219*^9, 3.835335875855085*^9, {3.8353399848541822`*^9, 
   3.8353399873078823`*^9}, {3.835340023869443*^9, 3.835340033514516*^9}, {
   3.8372405977149277`*^9, 3.8372406526384363`*^9}, {3.837240742131382*^9, 
   3.83724074500476*^9}, {3.837240786204165*^9, 3.83724079189983*^9}, {
   3.837240839461918*^9, 3.837240880158502*^9}, {3.837241044980053*^9, 
   3.837241045734335*^9}, {3.8372412311973143`*^9, 3.837241272831266*^9}, {
   3.8377659378207693`*^9, 3.8377659992989416`*^9}, {3.8377663750720644`*^9, 
   3.837766380461894*^9}, 3.837766421669448*^9, {3.837769077795212*^9, 
   3.8377690804842024`*^9}, {3.8377691287289057`*^9, 
   3.8377691797121906`*^9}, {3.837769231635815*^9, 3.837769236826291*^9}, {
   3.8377692742162123`*^9, 3.837769278551049*^9}, 3.8377695797160835`*^9, 
   3.837769619491294*^9, 3.8377696565419455`*^9, 3.837769734164774*^9, 
   3.8377698529546056`*^9, {3.837770038197956*^9, 3.837770062226735*^9}, {
   3.8377701057324486`*^9, 3.8377702488028393`*^9}, {3.837770535023094*^9, 
   3.8377706907484283`*^9}, 3.837770886583701*^9, 3.8377713280442443`*^9, {
   3.8377715600746527`*^9, 3.837771612950345*^9}, 3.83777165784726*^9, {
   3.8377716930934114`*^9, 3.8377716943415403`*^9}, {3.8377724315949316`*^9, 
   3.837772447822268*^9}, {3.837772512440359*^9, 3.837772512504277*^9}, {
   3.837772602759748*^9, 3.8377726099340353`*^9}, {3.8377727937062206`*^9, 
   3.837772859745367*^9}, {3.837772912664562*^9, 3.8377729649550333`*^9}, {
   3.8378499806950865`*^9, 3.837850027444311*^9}, 3.837850133423977*^9, {
   3.8378501912152147`*^9, 3.8378501919643617`*^9}, 3.8378502375058193`*^9, {
   3.837851361967519*^9, 3.837851376115213*^9}, 3.8378515931781745`*^9, {
   3.8378517581392217`*^9, 3.8378519059783797`*^9}, {3.837852192834962*^9, 
   3.8378521933739967`*^9}, 3.837852925615298*^9, 3.837853743617009*^9, {
   3.8378550333230395`*^9, 3.837855033568391*^9}, 3.8378561800436172`*^9, {
   3.8378562581569104`*^9, 3.8378563023428884`*^9}, {3.837857010822671*^9, 
   3.8378570188656015`*^9}, {3.83785707139177*^9, 3.8378572378468323`*^9}, {
   3.8378572838615437`*^9, 3.8378572897796345`*^9}, {3.8378573469165688`*^9, 
   3.837857391495346*^9}, {3.837857468692587*^9, 3.8378574712340136`*^9}, {
   3.837858103401296*^9, 3.837858105891694*^9}, {3.837858909105563*^9, 
   3.8378589115020523`*^9}, 3.8378594397045746`*^9, {3.837860328512741*^9, 
   3.837860414953614*^9}, 3.8378608309528904`*^9, {3.837860955816148*^9, 
   3.837860963350851*^9}, {3.83786102253458*^9, 3.837861027362938*^9}, {
   3.8378615956170187`*^9, 3.837861600579297*^9}, {3.837862574817726*^9, 
   3.837862595985243*^9}, {3.837862656393502*^9, 3.837862674519432*^9}, {
   3.837868275145873*^9, 3.8378682826653075`*^9}, {3.837874884425891*^9, 
   3.837874895414549*^9}, {3.8380900484758043`*^9, 3.838090057071248*^9}, {
   3.8380905292967587`*^9, 3.8380905738674326`*^9}, {3.8380930120075636`*^9, 
   3.8380930320154176`*^9}, {3.8380963638052287`*^9, 
   3.8380963641096983`*^9}, {3.8381009923963194`*^9, 
   3.8381010354821815`*^9}, {3.838186742510497*^9, 3.838186742963558*^9}, 
   3.838186806942956*^9, {3.8381875429982214`*^9, 3.8381875455583773`*^9}, {
   3.8381878526295958`*^9, 3.838187875994213*^9}, {3.8381881282143726`*^9, 
   3.8381881300270853`*^9}, {3.8382028516822567`*^9, 
   3.8382028625597644`*^9}, {3.838379713905799*^9, 3.838379714158124*^9}, {
   3.838380418735058*^9, 3.838380419469116*^9}, 3.838699130149577*^9, {
   3.8393042496037874`*^9, 3.8393042528486757`*^9}, {3.839556500759516*^9, 
   3.8395565223123426`*^9}, {3.8395565617751923`*^9, 3.839556562467798*^9}, 
   3.8619559808923063`*^9, 3.861956352065115*^9, {3.861957092711094*^9, 
   3.861957164600238*^9}, {3.861965740995151*^9, 3.861965760339623*^9}, {
   3.861967933682673*^9, 3.861967941620644*^9}, 3.862930339207402*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"77cc0fd8-fe60-4e33-8925-d944a7cd3aef"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"MasterOutputOld", "[", 
     RowBox[{
     "i_", ",", "\[CapitalLambda]cutoff_", ",", "Infty_", ",", "points_"}], 
     "]"}], ":=", 
    RowBox[{"MasterFunction", "[", 
     RowBox[{
      RowBox[{"Tnlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"vwlist", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"h0list", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Lhlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"slowlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", ",", 
      RowBox[{"shighlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Lslist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"dslist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "\[CapitalLambda]cutoff", ",", 
      "Infty", ",", "points"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.861968511275733*^9, 3.861968513477248*^9}, {
  3.861986233086688*^9, 3.8619862364289827`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"25b5e6fd-4a54-4a82-8a65-afafeb7f0025"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MasterPars", "[", "i_", "]"}], ":=", 
   RowBox[{"Print", "[", " ", 
    RowBox[{"\"\<Pars \[Alpha]=\>\"", ",", 
     RowBox[{"alphalist", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"(*", 
      RowBox[{"\"\< \[Beta]/H=\>\"", ",", 
       RowBox[{"betalist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ","}], "*)"}], 
     "\"\< \!\(\*SubscriptBox[\(T\), \(n\)]\)=\>\"", ",", 
     RowBox[{"Tnlist", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     "\"\< \!\(\*SubscriptBox[\(v\), \(w\)]\)=\>\"", ",", 
     RowBox[{"vwlist", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     "\"\< \!\(\*SubscriptBox[\(T\), \(p\)]\)=\>\"", ",", 
     RowBox[{
      RowBox[{"Tnlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "*", 
      RowBox[{"TpoverTnlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     "\"\< \!\(\*SubscriptBox[\(v\), \(p\)]\)=\>\"", ",", 
     RowBox[{"vplist", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     "\"\< \!\(\*SubscriptBox[\(h\), \(0\)]\)=\>\"", ",", 
     RowBox[{"h0list", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     "\"\< \!\(\*SubscriptBox[\(L\), \(h\)]\)=\>\"", ",", 
     RowBox[{"Lhlist", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     "\"\< \!\(\*SubscriptBox[\(s\), \(l\)]\)=\>\"", ",", 
     RowBox[{"slowlist", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     "\"\< \!\(\*SubscriptBox[\(s\), \(h\)]\)=\>\"", ",", 
     RowBox[{"shighlist", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     "\"\< \!\(\*SubscriptBox[\(L\), \(s\)]\)=\>\"", ",", 
     RowBox[{"Lslist", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", "\"\< ds=\>\"", ",", 
     RowBox[{"dslist", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8619682438959417`*^9, 3.8619682770884666`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"edbe3538-fef7-4cea-9985-7b7c683c3b33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MasterPars", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.861968268443619*^9, 3.861968268894924*^9}, {
   3.861968321571949*^9, 3.8619683220147943`*^9}, {3.8622333241834917`*^9, 
   3.862233325464957*^9}, {3.862928815375807*^9, 3.862928819233794*^9}, {
   3.862929804115775*^9, 3.862929804450655*^9}, {3.862929844412986*^9, 
   3.862929851819591*^9}, 3.8631629893374023`*^9, {3.863171160011373*^9, 
   3.8631711629572697`*^9}, 3.863173246765098*^9, {3.863184520912394*^9, 
   3.863184523659697*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"002075f2-6453-4ac0-b1d1-f180c9725e23"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Pars \[Alpha]=\"\>", "\[InvisibleSpace]", 
   "0.0011257688167056537`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SubscriptBox[\\(T\\), \
\\(n\\)]\\)=\"\>", "\[InvisibleSpace]", "143.8705476829903`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SubscriptBox[\\(v\\), \
\\(w\\)]\\)=\"\>", "\[InvisibleSpace]", "0.2140936503852313`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SubscriptBox[\\(T\\), \
\\(p\\)]\\)=\"\>", "\[InvisibleSpace]", "143.90843460343163`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SubscriptBox[\\(v\\), \
\\(p\\)]\\)=\"\>", "\[InvisibleSpace]", "0.21329476971372907`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SubscriptBox[\\(h\\), \
\\(0\\)]\\)=\"\>", "\[InvisibleSpace]", "86.3887527536813`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SubscriptBox[\\(L\\), \
\\(h\\)]\\)=\"\>", "\[InvisibleSpace]", "0.1461685357081838`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SubscriptBox[\\(s\\), \
\\(l\\)]\\)=\"\>", "\[InvisibleSpace]", "204.33377524049604`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SubscriptBox[\\(s\\), \
\\(h\\)]\\)=\"\>", "\[InvisibleSpace]", "194.70177035080255`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SubscriptBox[\\(L\\), \
\\(s\\)]\\)=\"\>", "\[InvisibleSpace]", "0.14616677992837832`", 
   "\[InvisibleSpace]", "\<\" ds=\"\>", "\[InvisibleSpace]", 
   "0.10693420338039968`"}],
  SequenceForm[
  "Pars \[Alpha]=", 0.0011257688167056537`, 
   " \!\(\*SubscriptBox[\(T\), \(n\)]\)=", 143.8705476829903, 
   " \!\(\*SubscriptBox[\(v\), \(w\)]\)=", 0.2140936503852313, 
   " \!\(\*SubscriptBox[\(T\), \(p\)]\)=", 143.90843460343163`, 
   " \!\(\*SubscriptBox[\(v\), \(p\)]\)=", 0.21329476971372907`, 
   " \!\(\*SubscriptBox[\(h\), \(0\)]\)=", 86.3887527536813, 
   " \!\(\*SubscriptBox[\(L\), \(h\)]\)=", 0.1461685357081838, 
   " \!\(\*SubscriptBox[\(s\), \(l\)]\)=", 204.33377524049604`, 
   " \!\(\*SubscriptBox[\(s\), \(h\)]\)=", 194.70177035080255`, 
   " \!\(\*SubscriptBox[\(L\), \(s\)]\)=", 0.14616677992837832`, " ds=", 
   0.10693420338039968`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.861968269097823*^9, 3.8619683223177557`*^9, 3.862233325765482*^9, {
   3.862928813771657*^9, 3.86292881948379*^9}, {3.862929794822102*^9, 
   3.862929804616139*^9}, {3.86292984478657*^9, 3.862929851999341*^9}, 
   3.8629301071910563`*^9, {3.862930582809*^9, 3.86293060500677*^9}, 
   3.86316261963874*^9, 3.863162957420368*^9, 3.86316298986973*^9, 
   3.863164721771062*^9, {3.863171156800064*^9, 3.8631711630820017`*^9}, 
   3.863173009689869*^9, {3.863173234861225*^9, 3.863173247120099*^9}, 
   3.863184252997798*^9, {3.863184521332959*^9, 3.8631845238871317`*^9}},
 CellLabel->
  "During evaluation of \
In[88]:=",ExpressionUUID->"3e38d7d4-d88a-44a7-a99b-80931194a98b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"MasterOutput", "[", 
     RowBox[{
     "i_", ",", "\[CapitalLambda]cutoff_", ",", "Infty_", ",", "points_"}], 
     "]"}], ":=", 
    RowBox[{"MasterFunction", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Tnlist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "*", 
       RowBox[{"TpoverTnlist", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"vplist", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"h0list", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Lhlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"slowlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"shighlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Lslist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"dslist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "\[CapitalLambda]cutoff", ",", 
      "Infty", ",", "points"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.861968458486174*^9, 3.8619684878853903`*^9}, 
   3.861968532706365*^9, {3.86198638514075*^9, 
   3.861986387775929*^9}},ExpressionUUID->"17ccadb6-bafe-4bf2-8d57-\
8e4cb776928a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MasterOutputVelOld", "[", 
      RowBox[{"i_", ",", "\[CapitalLambda]cutoff_", ",", "points_"}], "]"}], ":=", 
     RowBox[{"MasterFunction", "[", 
      RowBox[{
       RowBox[{"Tnlist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"vwlist", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"h0list", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"Lhlist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"slowlist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", ",", 
       RowBox[{"shighlist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"Lslist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"dslist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "\[CapitalLambda]cutoff", ",", 
       "10", ",", "points"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MasterOutputVel", "[", 
     RowBox[{"i_", ",", "\[CapitalLambda]cutoff_", ",", "points_"}], "]"}], ":=", 
    RowBox[{"MasterFunction", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Tnlist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "*", 
       RowBox[{"TpoverTnlist", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"vplist", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"h0list", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Lhlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"slowlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"shighlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Lslist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"dslist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "\[CapitalLambda]cutoff", ",", 
      "7", ",", "points"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.861986255122571*^9, 3.861986258609365*^9}, {
   3.86293129749578*^9, 3.862931313891161*^9}, {3.86293173680322*^9, 
   3.8629317369222527`*^9}, {3.863163099396318*^9, 3.863163100790656*^9}, {
   3.863164016618788*^9, 3.863164016980443*^9}, {3.8631648523392773`*^9, 
   3.863164852457616*^9}, {3.8631652049931803`*^9, 3.863165205135613*^9}, {
   3.8631653188152533`*^9, 3.863165319318602*^9}, 3.863165502476555*^9, {
   3.863165562009248*^9, 3.863165562675263*^9}, 3.863165609086321*^9, {
   3.863171064203877*^9, 3.86317106458222*^9}, {3.863171177663989*^9, 
   3.863171177991107*^9}, {3.8631843623025427`*^9, 3.863184385058765*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"ddee143b-63f6-4888-a21f-9cab8c3743d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MasterOutputVel", "[", 
  RowBox[{"2", ",", "120", ",", "300"}], "]"}]], "Input",
 CellChangeTimes->{{3.861968658403203*^9, 3.86196866436012*^9}, {
   3.8619687129121447`*^9, 3.86196871328925*^9}, {3.862020860513076*^9, 
   3.862020870414364*^9}, {3.8622332604591093`*^9, 3.862233294191609*^9}, 
   3.862233515936308*^9, 3.862929864925354*^9, {3.8629301954654427`*^9, 
   3.86293020036973*^9}, {3.86293065849361*^9, 3.862930658626052*^9}, {
   3.8629307639274693`*^9, 3.862930793385742*^9}, {3.862931229106224*^9, 
   3.862931229233107*^9}, {3.862931267748885*^9, 3.8629312704424467`*^9}, {
   3.8629313408482523`*^9, 3.862931340931975*^9}, {3.862931626673357*^9, 
   3.862931626753551*^9}, {3.862931662876086*^9, 3.86293166322666*^9}, 
   3.862931766790029*^9, {3.862932161192328*^9, 3.8629321613415537`*^9}, {
   3.862932244766848*^9, 3.862932244893409*^9}, {3.862932278692554*^9, 
   3.862932302824486*^9}, {3.862932533226739*^9, 3.862932533559465*^9}, {
   3.863163023274061*^9, 3.863163066756734*^9}, {3.8631639402915154`*^9, 
   3.863163989528308*^9}, {3.863164187952486*^9, 3.863164188118187*^9}, {
   3.8631647538566113`*^9, 3.86316476020958*^9}, 3.8631647943069963`*^9, {
   3.863164899314178*^9, 3.863164899360519*^9}, {3.863165163100658*^9, 
   3.863165163310726*^9}, {3.8631652345773706`*^9, 3.8631652347548113`*^9}, {
   3.8631652896695004`*^9, 3.8631652920210876`*^9}, 3.8631653285525084`*^9, {
   3.863165393428844*^9, 3.863165393657219*^9}, {3.863165430124411*^9, 
   3.86316543075147*^9}, 3.863165736137431*^9, {3.863171033579488*^9, 
   3.863171036128581*^9}, {3.8631843201755*^9, 3.8631843222912617`*^9}, {
   3.8631843866498947`*^9, 3.863184440353208*^9}, {3.863184514950499*^9, 
   3.86318452715703*^9}, {3.863192353628188*^9, 3.863192354052081*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"3dd209a6-03ac-49fc-9bfc-38b11c6c8d37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
ZUmHuRPE/g/2rVM2
            "]]}, 
          Annotation[#, "Charting`Private`Tag$97112#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
zf8AQGyKBg==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$97112#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwtmnk01N//x2WXPUuWEhFSWogU7i0RCdki2yAtlCLJkt2kyDq24lOWimwh
iWzva9/3fd9mLGVpbImU3/t7zu+fmfM493Xm3vt8Pl/3vt/njNhNJ8PbtDQ0
NFfwj/99s7C+zFshUNFkp1DGSd8VldctI3HWllSk+mWmsZqpU1UyTNa7zYyK
9kYF5pnST6qqsXdpZRpTUeJMQIIiDVX1KafAtI02FX3JfifPTUsDfvCk83Yq
UJGQlPIbu/1coPlAtWcuGxW5qjGde6IsCgSs1l/0u/5E9glaKk4vTgFqbKHE
Aa5lJCFZ1Dm9chG8zhIJYahZROeWtTio2FVw94N6grv3AuKQ9tSp4zECzJHa
B1WEfiAzpaOafEpmwNN02/5DxzwaKX3B/8XNGlRwvZS2dphDwZnHL0XetwNS
uX0x71hmUcCdqtVMm7vA9mhLfUgVBakkq+1PtbsPHsalPKixIqMrq8zLUhzO
4OrEodEU7mkkEvmRATi7AD12i1+MrZOIL+t5tMOKK7hyY5HZr28cxRjF2Lb0
u4N4A7fCs2qj6KT0e7uF3Kcg+HilZpz7EDp785Hk71Ef0NARIEdf2o862878
Gvf2B2pH7rG15PUjwwsGz0MC/QH21HCWlNaPXKdZzyoE+4PCI+KJh0j9qJd1
q4oU4w/eedXuUbbvR3pOzr2Xs/yBrxRT1yP+frS7meqoOuAPFP3CnCZc+lCA
TDR182QASD/xKqf0WC9qVipJVhkOABlEEaEPor3I+IfQWsNEAMgaTHsRzteL
ODj5mjVmAkBuYOFNm90elHPa3BhQA0BRf5cAY08POn2dUKHJGAgafNmCDJ72
oGtstUdOng4E8+0BVvON3eiA1ukfkcRA8EOcpaWrohudutnw+UFwIFj0iFIq
K+hGtXNMAsbhgYB6OJkn4k03ylYrlTj1KhD8ditvknfuRozj4TklWYGA5dCm
gt/+biT226VWojMQyDg5cvDf6UIbNW+/J/MRgRDP6cRyiy50zCy7/pEgEbAW
bxyxM+hCW8f69mkdJILFf76q+Spd6MBAUxlVgghyI0iO2jxdKM1S92OJPBHI
5xY1+1Z2opBgxvW314hAwtDL5EhRJ/rkFz1LZ0QEvL/gdEt2J7JKil66bkIE
v1SbtgRedSK5wQui2ZZE8K1tRPrLg05URdfpfsaBCFSWaF7MCXUiYsMmF/In
guOkun0RXJ2IJrSoy4dIBAcVXiadYexEDn56E+rPieDvlqQjHbkD1SQ8je4N
JYJAQZ3ms1EdaGxhQM40ngjsbPumnnl1IOYI1zNfXxOBeiZhq+tOB0rS7/Bf
SSQCxnOPpB1VO9BFJqpjcDIRhN6If57yox3tqihLTGUQgWPKoaSlvnZk8FKu
RSibCPTmM76er2pHnxMunFb5RARcHmWU3lft6N/X/aEHPhNB7KtJNRaNdpSc
m/T49jcieDLhYG5yqh0xLoyJapUSgYnU2qP3wu1IipGBIl5OBEpO3iFURnw+
erqclQoiECxmSFVdbUPhi/V3sxARbP+L+PZyrA11VEFGzSoiGL0s0DnQ2IYq
QyzdKquJoCIidU6isA1ZX2H7yFlLBEn9MruPktuQFovIfY06Igg7uKpKH9KG
hhf4PLPrieDprRLveJc2xBj+2VKskQjss/3LpC3bkH7akzNvm4jAdFVzu1Sj
DakuzYrwtRDB5XOc53RPtiGDgy/P+7USwRn/fvcJgTbEuUxO62ojgsMNb4se
0bah7f2efrQduB4ctzfoFlvRa6P2GaZOIvhnfPxMfF8rcjSz3xzAeem/NRdp
1Ir2KjulBnURQfPRQKpOdCtS0EryE+/B8+B85eSEF17fpim4p5cI0ou5Hj66
3YqKvMXph3GO/TeQQ3etFV371Xb3fR8REDWSF+KUWtHjYfJ9w34icAm7IyN9
uBVZN+1RGsXZpkfWoZS1Fenb1a4pDOD+CW181NloQYFajfXGOKvYls+Oj7eg
aE+e2/o4y2QQjzxqbEGU93apd3EW/Kl9i66gBa2nnxAi4cysuO993H8taHJ0
dKES51/eQ1NSQS2oKblfbgFnSk2KaOnDFtR+5Rkr/SARdO+1t9a50YI4FPSi
d/HxSoOTSeMXW1BG2RtyF855r3+NOh9rQdjZQWEnnJMmKoTp+FrQAzoH0xZ8
/WGSQeZx/5pR+BJhkQ5n+0KewZKuZnQ/JaKrDtfD5M8wv05ZM6I1OsZ0Fmd1
tXfXxz80IyUiZ0kqrqdciEOsc0Qz+nxzefp3NxGIdZ7qofVoRlziXv4nceba
/5s7zrYZbW3YhyvhfvyzQvpSV5sRN/t9hv/5t/jheWTJGXw84QwlvJ0Ihhd0
26+KNKPH9DVCK3geGuX42MeZmtHUgywmNzwvxZ6jV51XmtC9TN4Ozmbcv8r3
L2lHmtAUg5NCPp63WKb7TbG1TYi/W3JXqwHvVz05ZqncJjRmmUltwfPqHLd1
ueRVE2LasGuXwfNMGK0MuhrQhG5/r7E0xfOuKx5cO3avCTUFK9pcqsT9u3eN
ztkYrz989O0k3j8yn/nVaEETOlDy8Jt5Gd7fMA1JcjehAN+CP7lFRLAe5Pjv
23YjWq17uHSvkAjIrfKqVymNKHNyiVGkAPfHvLrUqbgR6V7QCj6G93duasjW
ntRGdNfq08idLCJ4M6+vFPuyEUn+m5e1+EgEnm4TX79ZNaKZtvga1xRc7+id
/D30jcjD2bdZLwY/f175Pd1ZakCie03G/0Ti+39Dq7450ICOOjOV+YYRwUY6
88BidgMSrHmUW/eMCCRzQlPm4hrQeOVcoQN+/pl85rg37deAZMZk+ae98P4o
4/07YNSA3rwMklB7TATzla/qu1Ub0OczPg+YnfC81gtFtUk1IKsjntr19/B+
7xQVr/lTj3yZ1n5P2xJBdt/7xYqZeuQZmT0rYoWfJ8OSRd866tG+0LEUthtE
oDpz/Eru+3p0bE+d+qwOETz8kbcvMxyv/zO/a6mJ5/On3Oh793rk/OeW4dpF
IqDZVnJKuFqPWtx6NuXOEkE1h0bcs7U6pK8eObZwiAjWeBoJfmN1iPa6x6IO
fr9ICF6VftpQh/4OKkRe30cEQeIGZU7/1SE/uw6HYXoi0FKymjK/VId6rzg+
YPkRCDxVJ7Ouy9Yh0+0TF2emA0GWmp2r/v46BF1jNe6PBAJWXQemywu1iI57
XlaxJRC02z6RPR1Ti45FpVfwZgcC49BwTyZyDbpTc11D2y4QBEVxXaJtq0Ex
PPnJ02aBoCguhu1vUQ2arvzc5aMfCPanJCSvvqxB5jfKtKxUA8FwYVrdmFwN
Uo2Da0d4AoH1eAV3YWA12j6tXqxaEgAcA8r2H31YjUKamT1rPwWApxIlB5PM
qtHJtkDettQAEH+v8GjwqWrEQK7YDgsJAK2/si5ajlchE9E5VwXzAHCe8/Uj
+vNVKMMNnfxH9QdaBXHunkeq0CGuUbsQsj8wuR7js8xVha4vdmiz9/uDR/9F
hAzOVSJeEe6xlFJ/kCEVlJoTV4kEd56esPPzB8f9Ke8ypxHKFo7QItDhv1c/
kRtTglDDkyNyMzN+wI5tpNQnCiF0UlV2t8YPJL7u6jYACG1fS5Qq9/EDTJ8x
2u0EDFVd8AgSXfcF01Ovb2obVCDFhMMyIc0+IOGS7uEFVIreXKgv+6joBdpf
1Hpbx5SiBAZuUSdGL0DfqjzQc6cUsTeIG6/0PgXOxjJh5eylSFwi89bKg6fg
8m2mX+EWJUjTJ2/U/p0nWH9e1XRqsxil7Jn74P7THci0KEmkNRcj+SnV+yvF
7sCGM99XMKkYcUOVAm1/d9DyKkmeVqMYOa4Q+e053cG7DK+3PdFF6GaMSEXh
ITeg36zwyO3EV+TUNfExTc4VPOf41PJjz1dUMCyl10Z9DMoNJSSt+wrR5W0W
X/TpMZAa2Tei6V2I6k6dZAg8+hj8W/ipLtj8BbE26X7eEHUBOexZAuW3C1Ak
U1bu0oAT4Hyn4k93Pg9Vtx8ultK4A5ZT+aT6ZnNRymlXnp3s26A9dbktPSYX
XYGRg5U8t0FEaoqw9tIn5C1LG3+CYgfYUumLo1Jy0A/+7exDXraAOaV16SBT
FlIzPfBmYPQGoEmytFDq/YBGhGwFdL4cA5PyW47Do7HoyhHer+ztt7FY0715
Kt9j4NP2hXe/dwKwGw9edh1LjIWKY3kS5+UCsYPEvetCV+PgN7rdYtG7gVh6
7t5zWznxMCRvpMe7KxD7xsBa89U5AZ48/NPQPZ2IjX1hHTjxOwk6W8o7cWoE
YTzBz/2i6NIgU1nRiXTLYOxXdD0Xs2UanGDfp3k2NBgbfMv4zq8wDTq5b5TL
lgZjb748r314Ox2ahwupRguEYJITz1l0Gz7C3FLNFdnuEExJ8UUMS2gWZLJ1
mDOXC8VOrNYYXWTJhzbtDFY5+eHYTNnD98Fy+ZDhpX+laU849iZIcK3DIh8i
u3eY2K9wbK+gUzQhNx/6+s1E6ipHYHNQqMvL6DNUKM3LzMAisJRwZ72itwVQ
tL1mdP5LJGZqKpz0t74A9sZUe9h0RWIcYvVL6tQCqOc/57W8FIl5FwqH96h9
gc4H8/Z0cEdhZiP1LdS5LzA83Tg1UzMK23f04JVjcl+hYP6PEJesKKxpteG1
i8VXOMLmpfT9axTmX+4yX/LsKxzu30PxqYrClq81vtAawOvf2vrEDUZhLW6P
6297F8FwS5emUDoSFnhBhP9TWhEUCMecaNhJ2Pm9TbfX24ugbP+U+w4fCct4
K8JAFCuGHApE3Y/SJOxZbdOllPpiSP8xPtxEj4QpR7jGzP0shr6LidlnTUnY
qukh8gnBb9BA+JNFtjUJs1lwDay4/w1e06W8HH9IwlT2iVYNc5VAReEQ6lQo
CVsbaeY6fL4Eqij6Wl+PIWFZaU9sHOxK4CgbiTcjkYTZOonm54eVwChPHTuU
SsIEzrXsbn4tgb0mysn+GSSsg9btGpwogeJ+88JduSTseato8nPmUrjVOn48
vpCEgfiW5bbTpXD3yjOpryUkbMPaDfBZlELP2ykdHzASFn0sDXa/KIUvKK8O
adeSsBObPRciC0shVe/Rj4PNJMw+4vQlFo4yyE/zWKu1j4QxmNuo158vg9s9
Ti9ujZCwd0ciNYh3y6Dfp83X6ZMkDK5UXL4QWwaVetYNH82QsNHyRc2/lWWw
JNQg9P13EuYZLHyldKkMxhz8vf/AEgnjN9bWdhcqh97t76uuUEnYtYWPOiuP
y+GntnPJDpskbLGoXzc3pRy6KLc+OfCHhAUHMly731YOI4wCKWX/SNgRvTP6
0tt4vUjMdynaaKxa0M5gRrIC+qQpEC8wRGPWMyTDd0YV8CM1JW+GKRrbya80
svavgIPMbA82WaKx194/jQ98qoDYr08l11mjMQUtEZOhoQqo8tLD7AFbNNbN
o2saz4jBoPVpszb2aOzhhNcNI3kMsm4b5JhyRmOs2VlmXDYYLJt+2rDEFY1l
uA2Zt4Vh0PvXvsOP9kVjGmrMli9LMKjq0yFXwxONTbOftdKcxeAMdtu5jjca
8x26TaDnQdCOLtTAjC8aE06Lta6CCKZEr+vY4PzNucbG1xHB54WmQ2V4vbHK
qq1yAoI3JzcD+/DfW2ESs/uNX7f3o6CpPM4RPddufV1FkKdkfewbPn/8NSRX
wlkJYzKmta7gfOuryZf9kpXw4KfepgbuaExOeFneTaUSfueNj96PM01AUGGv
YSU8fmK1VxjfT/vsAQV5h0oorFlYXcwRjb3VKfxK8quEi58+hrfj+jgWXFWk
xlXC3vxXdy/tjcbOC5CL9HIq4U76EMkL15vZ9+nZT9WV0KrdWH6NPhobIHN/
Yx2qhIeaJdMjcb/Sr2Qq3ftZCUuIzGyKNNGYa96FkkaGKphGKXje8peEqfEN
npM6UAVv9I+fVcD95/ZyKg2Sq4JX1DQu3vhNwiYnGZUpWlVwjTu5VnCDhOVe
TipTwxVsPpFGJqyQMO8cBZXUJ1VQM5Crkg3P29V9beW7oVVwmcXRhjhPwubH
/lSUf6uC/NuP5Jjw/BZdigHC+MtcUfnW5jSe72eZMshzpgpe1phbyR0gYWJP
zCoV91XDpVvCdwvbSRh1mHohTroa2gw/MS5vImHYheCqNVANvbqtzA3wfjJn
K67Ov18NX8U5WMp9I2Gx73nrZOqq4WqLcnZ1CgkTvUotFR2phq/HnXrH8X7P
WW3J51+phiNIsbMqloTVXiS+oT1YA+8C+obnL0jY+sTK42HXGkg0s9CXvUfC
jA90HH4pUQvDbGf3Zx7D9ajJEvA/Xwsb5ifR1mES5nj/OYebfi2MXhM9eFcI
30+p6ratdy30FQ5MMmIhYYU3crrO9dbC2/dU9OJmojDeuBD/78Q6eCkw/xP3
qygsReW220RCHZTI2hezHhaFHadccOzLq4NfqGNBCYFRmLr8b9OqkTpok8j1
75djFObadedkgnw9NM4S2Uq8GIX1squPa5HrIci11aZri8Rin/9TzlBrhAb3
1P7eUo/ALkVZb4ibNkK3nRNXrx6PwFYTKnOT7zdCi11O+xGeCEz/U6DYq9hG
eOs4kTZiOhxj62Vkej7bCDPcboy98g/Hnolxdtu9bIICXAtvxIvDMNfyQ/aH
upthnE9EPf7KjxmtXoiNt22De4f0mdKLX2C32wIi3rp3wc8xoqw2z/yxRjqT
kj8BXdCoKMBD/L4/JnNehmIW1gX3Sq7zdxn4Y8vp3ef4U7tgcuuXsxyH/DEP
f/GZiGZ8PMfyKYerHxYmX6fsf7AbhtR1eiTP+2AFCczfb9Z0QxZbmmSd70+x
3duRl6Q5eyHvhNkOm+kT7EIFw1FDwV4ozWRk/ejEEyyQ15vDW7wXzrkE3Ctm
eILR19gPdZzthfmH41M7vrhizKJqTu42vTB1LWPhHpcrtm94PbH+cy8U3Ku4
5tvrgknqma/eMu6DcjKfksyeOGN30zoHIgh9cHjKUVrYwBnL2Llc8c2+D357
YaSlL+uMHcuWD2bz6YOnkgdfJzc7YaeY2UUK0/rgmUqOnujMh9i5anSFbrMP
ztyfemHi7YjpKB5JTU3oh6FJCsdqDOwxxoid1YwP/VCn41mHC5s9VjXTo56f
1w9fqDMyyDXexRTjAuexun7oucte/PPCXUxsfeLk6Eo/lH5meuTcqTvYr8+J
GL/2APSni8rjk7iFpchyjYZuD0AP0noI9ZINZh40JxvDMAgfK6iE7dlrg/GN
YX6JXIOQr4RpP2uKNfYy7IF4puQgPDXPoilfRMCeLDTfqzcchL3Uf2bDFEtM
OzNoiyZ7EAadNW7ndTTDNiT+8LtZDMF88+Dkb3OGWLVsnHbl7SHow1ZiVhRq
iEUonvTd6zwEVWa02dROGmKSWnYzSc+GoJTt37ecbgaYyf2WLw2fhqDJcNjV
IRZ9rPjzf/qCNMNQk8+VoSZVG/MEKi/LPwxDyycCr5ocLmCXNfsrGPOGYbvH
W5a1FIjt03de0S8Zhrd+33x0yhFgWbYfbsy0DcNXnJnSe2hUsOFnbFIcm8Mw
xnONWersWUy5ZbTG+soIpIg5BDsoH8f+mvr8pV0egf4mW8fmnzIBNVuPtzJb
I5BjbPGsGx0XCL73WNWQfhTeMDJOOWTEC3h9HHxShUZh0XuXht97DgKZd9f/
Qs1R2HCTdkyCVwqYLMr+9U4ZhZpXX+s3fpQHuf7jO78Mx6CMtID7Ef2LYD1k
6I0IYQzapP89f7PqIjgX06ty2WEMzkSZ/5qTUwO1ac3ecX5j8OwGp+g27yUw
3Fy0I58zBsVofQfuN6oDJr7IHWeGcWigfm7XgF0L2GTCnR/F4zDATzFCa48e
KLb763O9ehymFIiu3TPRAxwiZbuodRyWuut8FcnWA+XRinRxU+Mwcb9iMdXg
GhDwlt0LWSdgnogbq6GmPujSExaIIUzANWjz5K6vAZBmGUr4az8BV6I0Spje
GwD/mnhh+8cTMJn2cHpnvQE4obTvkGrwBJyX5z0gxmkIXoqxSM59noAP1/z2
hKYYArGnfxLe0k7CkLGR4sx8I6BjOjzczTQJqxhdxq52GwGPMyXCzOyTUGJl
UKZuzQh0Lru9ddk/CZNzPAryFIyBr91qiubxSeiqnsR7scAYDOt8/7hyfRIa
BqzRyaRfB9GHBr5qZE7Cz4zf9BPNTYEsO1OvTe4kFGp26uFwNQWN24qrXl8m
4c6LtYG74abgX1/8iYIKfNxy0u06MgX3wkw+inRPwquhPDKXD94AF7f6Xm9u
T8JfZ0OYtXpvgNFZhuJ9NFNQUJfty9T3G8CtV6FPlmEKSkOV1sF/N0BOXhz3
Lc4pWPmdFCIhbQYE7lx/2Sk+BS3o/8uX8jYD1O5er0ydKSha6NH6b785CK2k
T6w1mIIErwgnxmPmQDL3zLcJkyl4Xt9kcC8wB5Yhset8tlPw7LU9PJl25qAB
Gj8IfDIFmYbme2OzzEFSTg/BImkKGuTym705bQHOJdL5uL2fgvuLnPQqLlqA
3hfy/5EypiADTy+4a2AB9trFDDQUTMG0B6DL0skCuAka6Z9pmIK/7w64nM+x
ALrPuy+yU/H5r1V9lj9oCSTW5fhfbeBMs0Y7dswS7NjG/BD9MwW/i4fKxJ23
BDmqxjFnGKdh3NbUkSZTS7B3o49icWAa8pl3LthGWILpm4olM2LTsCT9vNRM
oiUo7YwPd5KahtTTZ0STP1oChxxTRaLcNOyMeWL/pMoSNNoNvcjSmoZnduOP
bqxZgpSuc5Zn9KahueJkZ92uJXCHiacwo2lYcXT7NzerFZAUthjqIkzDbv25
wzuiViCoe1Rmy3UaglqLvaO6VkDt4mSbZuo0NApN2xf01goI5V1415U+DYPz
TiTLfbQCKwdS3SxypmHVwuPr9flWIOW37SGn4mm4Ma8Wp1ljBXbzyM7xbdMw
ha+zTppiBfoPqmuI9kzD2fAyEc1FK5Ab+kEwa3AaUlLO93isWwHC3dvVFeRp
iDlRfKrpCaBcZI5nZmsaqiR5H/5wmABiwzTnH+7i+/1nYnroKAHc3/5Y/pue
DDVnWB2zThKAUL/9bTYuMmwt+XFHQpUAVi81nYvnI0Nm1kv5C5cIoPnzUQ5R
YTIsCr/+MFmbADzDfxTJS5JhzRIDp48pAej/0Q6tOEaGRie6jf2sCEDaIdta
8zQZFt752idiRwCD6o7MFipk2BF08VngAwJQ3FkyCzQkw+Z5JgMxIgHEV59M
/mRKhkGUiwxMwQSwGfyIMmhJhubC5iQsjAC+8W08PHmXDNU01A3uxBGAwKhi
obkjGQ5XHOFTSiAAj3ceW0GPyJCxmv9v3xsCOHdyhzjqRYZ+V4GN2wcCSNxQ
bWIKIMPLlgdCCBkEsF3mxyH/nAyfnsr1vZRDAOaBVUaEUDL86No3zp9PAKVa
dAkhUfj8fY81m7/g+nBqjBfGkaHo7j2Ta8UE4NX3XHwyEV9v0pvMV6UEMPpf
oz1rChkK2PwYj60gAJWbe3MV08jw4afV10qVBPBGWmfNNosMs1WN1GqqCeDv
crhSeB4Z0tW/E3xURwCYF3cNuYQM+5K3V3abCUBEzYiZE5Fh+dTv6ro2AvBl
jtM9X0uG8Ttdth6dBDDe3h99u4kMX837K+7tIQAYJzAY1U6Gm29pMh/0EUCK
hfnB8h4yXObVEYsbIACaw29uzg2SYb4GgenxEAHYzI993DdOhn+8Glp3hgmg
MvfQkiqZDH99cSl5NkoAok9s5RzmyTBzT6jbsXECCFB+7x67hPvnTpGhTBCA
WqMk7cImro90Nu8NMgG8i7DX5P9LhieDK19tUQiA7npW2EVaCrS0uPvJc5YA
bgkvdjkyUWBC4WPvljkCqJ2S3f+ajQJT0kuOTc8TgESGk2UNNwUeVWefzv9O
AM8efk5d5qfAdZMD9go/CEDjz5njGmIUKCv01ODJAgGkV7k9cpakQGLIR6vT
iwTAGPyt6L9jFLgbW7z6E+c7ett/6k9R4OiP2IUPSwRQz6tycVWBAgnnZMTV
lwlAcsTn+UFlCqw8cdO1CucXqahF6wIFanhKlXL9JID5u3u4XTXw9TTc6jiC
s9aJSybJ2hSYV08fuY7XZ6w/+6/5GgW+/54x8hxnlrL6yQ1jClTe+fn5FM73
ApglxcwpkFaOWrSCz9+sqX1fx5oCF37ddMJwluEIy3e/RYHLRXtsQnEO7W3b
eOdAgf/Ggth1cV5M5FRuf0iBPIMZO5v4fnRsDfy3HlOgKLdEgT/OOVIxdRKe
FCi8kV8wguvBvty7V9+XAv/8ZCb+xfV6WMiv70WkwIIHMx+HcT3bn96ISw+m
wM0cTbkwXO8TFxOHu8IpcOnooqkZ7kcE0+ihv9EUyHVCz/w87te1WOsso7f4
+o4eDWbD/Vwc7kpbeof74XLtdfs0Ab9f1VNfZFDg0Iz1wuMpApCyL3ojlkuB
zQM++ct4PmpzpV+XfaFA6ttW/tN4fmw3EmOul1CgZ7iTriyer3/K7JE/Mdx/
CjvdNJ5HpaaVIPFmCpx9J08h4vnt47wVUNFBgYmk2AVHPN8uJv3epn0U+B9p
Oc64iwA432p5rAxT4H57vm7ZDlwPcunj0EkKVB0ejVhoJYArMrJOR2Zx/iRQ
5o/306xz8j20QIGX099oTDYQALGY+47ZCgWGvFQ5+LcWz/s/ou3aL9xPktLN
gSoCqFD/ZRm+Q4H0HsU81Rh+PoTa35CinYGGrEzzNWX4eSqge82CfQYGkUuD
Rr7i/svzq9aIz8A6hvkHNJl4Pj2DlayOzsBDuwQO7TQCUK/clt88MQO77Ojq
rqfi/aw7IXPsPF5vJOnxAT+/Vu9mCMToz8B6daBk8ZIAInOFeGVNZuBv+8if
V54TwPGNMM4Gixk4Xf+TkzkQz3fgI8Y/d2bgoMU+pW4PAhh5c379ps8MDGi+
VfjsDq5/V2uHXNYM/Mm4b4gD4PoLwJbWvBloXxBR0qyE60/4XH/n6wy88Ou+
zzN5XP/FuIrEyhlIe9m1sEEa15PROpt2YAaW/zZPdeMmgDjllefddLOw6FKd
dO2kFXgXXWhtyDILHdULsq8O4/fRd3elbo5ZqP/SvCutxwo0vPr3vUtwFj5u
glwv663A1hqrbtfJWSgh3LF5K8cKWOVI8nRazEI7Mz6VjcdW4MhBy+S2L7Pw
/UB14NBvSyDneshDt2QWHgAPRf2plgC0TOu3YbNweyI/UGneEph6OtC2Nc1C
mhinTTRgCUL63G63TszChqkdQ6MiS7AUTjrWwjoHvWhdfgg7W4Kv/+qLG+3m
YPu7mdPWwxZAO/f+nh/2c9Dkj16yZpcFmLTiusr6cA6++dzJrdCIP69UmI3r
eszBewvswSxFFsDaa5G+J2wO1vnRa9KSLADLb27Dsa9zcDSKM7Fa3QJYrVgu
rjDNQ7t3T67zpZkDBsqqqHDOPCw+u8YIdcxAP0+jaPbneZi3korf4mYg49Jb
UeXieZiqdNaJJG8GdN5rilpUz0N9569dW0JmIPbmm0P/Dc7DT4k2T2/iz3sS
UxoiwgzfYTHHh4t7nt0A6uOvhYUJ3+Hr1hOWOQWmIHAQ8Atz/YDjLOIFer+v
g5M/Jy+5Wy7Ahzn2W/FOhqBIrKFO+90iXHuoLfFMRRfcs2vraaFbhrWvk764
yKsDvYajQpm6P+HQbw/91AOKIMRZle6e0U84XCzsxtioAGoFDRZlzH5CJ5aq
FJ3HCuC8oweWc+snrBQgCik0nQGS3A03871+ws5Zjb5LLvJg1/xWdnHmT5ip
HPZDpeoUuOF+TYRMS4UnDglc0IuRBL+uDkXXMFCho8ooyWn6CIgRtWP6wEyF
H46L3fp+6ghob3Kj3uKgQtvj+/zPtYoD9QNJ1bOCVMjCwflNk14MnKpavPPj
FBVGFRW+Km3lB+1xbiPN8lQYJhvrcvMWH7h/j0Y/W5EKj8UsDBf84QHpPLzn
HFWo8HG9fIKkNDc4cEeZdVmTCv2Z+u40zzOC0vN1fu3aVFgtqN41y0EPTDmv
refq4uM/PwobKOwB0d9ujjkZUeHu35pM7z2bqqfCFw30TaiQO5I+7PSVFdV2
W7f6U2ZU+KDy08NKwTlVR0UaZW5LKmyn4f3mLzug+v//P4Kvk/41RGvqqP4f
ejZpiA==
            "]]}, Annotation[#, "Charting`Private`Tag$97112#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
4uxvVsfQ3VrO104rbrBhED7H93cMGUt7eYh/dYMsGfVwiZ3jqJia9UET2Q0Y
VnsndbjG0a6veP2Qvhs0Gfb7ZiiNI/pQla/rL16CnOxou2LiOPIWj/4jxPcC
OHIvJ3WmjCMBzyMd+n9d4AdXooNO1jhqPqL/oKDPBRL+GPA+KRlH89f5d/AE
u8BW7oR1VPs4Yp5sYBikdoFKnm+sU2vjyD9kSVxq0RkkNxa1PNQmEDWLzHmz
aSeIqj0Tn605gTTUQjwZmp3gt5/N5Jf7EyjgYNe+qUwnKD2wanXGZAKFHl11
DLV1gotnNjyHnk+ghMz23nwaJ7j0kCFHMnkC8U9yMc4ecwS5puM0878nkI+s
z6e/3k8hKdhUkX1zAt3RGP5aYPEUaO9mBMrSTKKc1Ac1UXeeAmVM+OBbxkn0
j+PmOM+Rp3Dlr4TQFf5JlCghc4+p1h6UROQ14pUnUVSVUywDnT3citDLuBM3
iZ5K7TsjEm8LCwOdyYtJk+jxQ+JIhq8tBPArJPqmTSJ9q5uU69a2QMk5+bai
YBINMPR6K8nZwoXmH95HWyaRYiiHLdusDfD98zT479ckUqhzoi+/aAMrJmmH
wm9PIaTJ5JU4+gRe53CwCWtMoR1x69f2lD0BodXAvY06U0haS0jiV+gTeORh
s/PvoykUoDGjlXzlCQzGSv18+GIKKeR+UCJnWQGls+2TeMYUMnHoLGXxtoRI
6R8+XbTTKC1vz3yDxmNICivUU9s9jRQzVAM8JB9DzqzjhS7maXSnnPdECftj
aHzzb7bz8DT6N61fmtBnDmv/7VHpPDONrDlvd8ppmINu1nHWDp1p5CquIx6u
bwbHuO/HtxdMo9R8VSbTEBMQt+d1UimbRtfe33Llf2oC0Dp+u52Y3s5fi8Wy
tExA85kZTXvzNMrlujXrfcQE/HsdjNtGppH2O/ID16JHsBgUerp1zzdUn/As
9OakMRT9ayhpMvyG8j7dpZPRNgLlnMfUc6bfkBV3QJKEghGM6rJc32P1DdlO
eBnxihgBQ5XWsIrTN3ThxRXDHTRGoPd8ga478Bu6bXahNCLTEHb/2af2tegb
evzgloAGnSHo/ri/8IN+BtHLss1TNxnASgK1JCvTDDow9SyfvcgA/G6nvJTY
P4NCZd6NH0oyAHLu0n5HrhkUop2byOpiAPRWHhc3RGeQxmMbnWNiBpA/l+qz
U3sGVWGd1twEfdgxucLHmTWDJjKePg3j0oM+1ia+zPwZNNtpLnl27QGkycfx
SZfMIN3muItJvQ/gxntFPp3aGTT+Z/LLjeAHEPEwlvfdlxkkvmOvlDv1AxAY
u8LDuWMWqZgEHWdfuQ8Kw285OR/Mohb+oNC8ZW1gZ7bizDScRfJHhhZTOrVh
RkaeU9psFg2On+iLJmtDYNwih479LFrrw7QN9trQc1+O413ALHp1T0Pw8YYW
GA7OH+IsmUUaJlEF/ixa4PEF2DlZ5lCIqJJqkJomfNVf9blxYA6d2Uo4duKi
JlyYzfz9gmMOvW0pUPnCqwmLa4f6RwXm0MGZNLHiRQ24x/nfu5SLc8j/ofxH
wUANEH6Qyi9uOIc47E5oFrTchS8Te4WvFc8hjyVpZoq2OpxZGpV3vD+Pjpdf
SqEpVIV135nQYIN5tCax8lsoQRUofMsjyY/mUXtBRap+oCrcU9t63mM9j5bN
mNppjVXBrYi7UMx7Ht29rXb690FV6HiuLbCQPY/SZ72uHX55G2x39dAZbM0j
gct37F/m34Ri/sZ65aQF5Col5vTynjKYG7Z3t9J+R0f/Kf/emSULNxsFOdJV
llD5AeLQx4Cz4G8tQ2t+Zwlxji3sjZE7C5TDqguntJYQU86lR7Lr4iBl4URk
GS2hI8K/NT+aisPxfY0P854voTtK9xhr5MRgS9sosyR9CZkN+V/6OSkM9xxv
8UzQLCM7F5d5GSMB+HW9P6xuxzJqXj5xt63pKITzGdJ/2LWMJBwz1Q8IHYWP
zQ7LRszL6IKnAN+rJX5Q4CLVTh9eRo+6O8qT/+MB0ZqFR3Oiy8gn343TeYQN
PkY6DLacXUZM5/kk77xjhcfmVLczJZfR6qz5vtsa+yGFle2ixaVldJJgs4sL
2gtcj6T3fFdcRsRLhvsBLDugXKr+5UflZTRs9V/rvA0NaO699TNHZRm9VNFn
Vk/bkgkrffj1yZ1lNKFnhDQFV2VEgxZUb2ssow8Bf+yiiSWZjwYODaJay4jH
LSuKzDolYyFJJb3v/jKibphQ6Yzqkfn//67Ip/aycQFHRNX/ADyJym0=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$97112#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       BaseStyle -> {
        FontColor -> GrayLevel[0], FontWeight -> "Normal", FontSize -> 16, 
         FontFamily -> "Times"}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"\"", TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*StyleBox[\\\"z\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
           TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 500, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{
           SubscriptBox["v", "w"], "\[LongEqual]", "0.21329476971372907`"}], 
         TraditionalForm], 
       PlotRange -> {{-1.0231797499572866`, 
        1.0231797499572866`}, {-2.4830831165895935`*^-6, 
        2.108251350799364*^-6}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(t\\), \\(L\\)]\\)\"", 
         "\" \\!\\(\\*SubscriptBox[\\(b\\), \\(L\\)]\\)\"", 
         "\" \\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(h\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(t\\), \\(R\\)]\\)\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontColor -> GrayLevel[0], FontWeight -> 
                    "Normal", FontSize -> 16, FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontColor -> GrayLevel[0], FontWeight -> 
                    "Normal", FontSize -> 16, FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontColor -> GrayLevel[0], FontWeight -> 
                    "Normal", FontSize -> 16, FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontColor -> GrayLevel[0], FontWeight -> 
                    "Normal", FontSize -> 16, FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontColor -> GrayLevel[0], FontWeight -> 
                    "Normal", FontSize -> 16, FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontColor -> GrayLevel[0], FontWeight -> 
                    "Normal", FontSize -> 16, FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontColor -> GrayLevel[0], FontWeight -> 
                    "Normal", FontSize -> 16, FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontColor -> GrayLevel[0], FontWeight -> 
                    "Normal", FontSize -> 16, FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"FontColor", "\[Rule]", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"FontWeight", "\[Rule]", "\"Normal\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"FontColor", "\[Rule]", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"FontWeight", "\[Rule]", "\"Normal\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"FontColor", "\[Rule]", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"FontWeight", "\[Rule]", "\"Normal\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"FontColor", "\[Rule]", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"FontWeight", "\[Rule]", "\"Normal\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
3VRkqux/CHjtZQ==
         "]]},
       Annotation[#, "Charting`Private`Tag$97051#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    BaseStyle->{
     FontColor -> GrayLevel[0], FontWeight -> "Normal", FontSize -> 16, 
      FontFamily -> "Times"},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"d\[Eta]/\[Eta]obs\"", TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*StyleBox[\\\"z\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->500,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "0.0257587449096556`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8619687267798653`*^9, 3.8620208818914757`*^9, 3.8622333063269672`*^9, 
   3.8622335280053*^9, 3.862930214466529*^9, 3.862930638745288*^9, 
   3.862930682114822*^9, {3.862930789804673*^9, 3.8629308162935534`*^9}, {
   3.862931260686268*^9, 3.862931324451117*^9}, 3.862931360955562*^9, 
   3.86293164695499*^9, 3.862931683139771*^9, 3.862931758261539*^9, 
   3.862931793548534*^9, 3.8629321791937723`*^9, {3.86293226742443*^9, 
   3.8629323121147137`*^9}, 3.86293254420411*^9, {3.863163005254098*^9, 
   3.863163074552968*^9}, 3.8631631101437187`*^9, {3.8631639507039337`*^9, 
   3.863164027190113*^9}, 3.863164214294881*^9, 3.863164786627631*^9, 
   3.863164822244084*^9, {3.8631648805878887`*^9, 3.863164910094191*^9}, {
   3.8631651938851557`*^9, 3.86316524113326*^9}, 3.8631653119812803`*^9, 
   3.863165362060095*^9, 3.86316547807952*^9, 3.8631655556084013`*^9, 
   3.863165660345031*^9, 3.863165736479494*^9, {3.863171038867427*^9, 
   3.8631710769272137`*^9}, 3.8631843306045637`*^9, {3.863184375911373*^9, 
   3.8631844185990057`*^9}, 3.863184455037983*^9, 3.863184538156228*^9, 
   3.863192364651664*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"0033364f-e5c1-44ad-a03a-02249f9c82aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"BAUscale", "[", "i_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"BAU", ",", "res", ",", 
        RowBox[{"numpoints", "=", "100"}]}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"BAU", "[", 
         RowBox[{"\[CapitalLambda]_", "?", "NumericQ"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"BAU", "[", 
          RowBox[{"\[CapitalLambda]", "?", "NumericQ"}], "]"}], "=", 
         RowBox[{
          RowBox[{"MasterOutputVel", "[", 
           RowBox[{"i", ",", "\[CapitalLambda]", ",", "numpoints"}], "]"}], 
          "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"BAU", "[", "100", "]"}], "<", "1"}], ",", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"MasterOutputVel", "[", 
              RowBox[{"i", ",", "100", ",", "numpoints"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ";", 
          RowBox[{
          "Print", "[", "\"\<Did not work!!, \\n \[CapitalLambda]_CP=\>\"", 
           "]"}], ";", 
          RowBox[{"Return", "[", "99", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", "=", 
          RowBox[{"\[CapitalLambda]", "/.", 
           RowBox[{"FindRoot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"BAU", "[", "\[CapitalLambda]", "]"}], "-", "1"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"\[CapitalLambda]", ",", "100", ",", "1000"}], "}"}], 
             ",", 
             RowBox[{"AccuracyGoal", "\[Rule]", "2"}], ",", 
             RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<\[CapitalLambda]=\>\"", ",", "\[CapitalLambda]", ",", 
                 "\"\< BAU=\>\"", ",", 
                 RowBox[{"BAU", "[", "\[CapitalLambda]", "]"}]}], "]"}]}]}], 
             "*)"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"MasterPars", "[", "i", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{"MasterOutputVel", "[", 
          RowBox[{"i", ",", "res", ",", "numpoints"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[CapitalLambda]=\>\"", ",", "res"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "res", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.861967977522348*^9, 3.861967984523747*^9}, 
   3.8619681532888927`*^9, 3.8619684408965397`*^9, {3.86196853885262*^9, 
   3.8619685528434753`*^9}, {3.8619686163253183`*^9, 3.861968648438264*^9}, 
   3.862020901948986*^9, {3.8629324110212603`*^9, 3.862932411370304*^9}, {
   3.863165667539068*^9, 3.863165672939329*^9}, {3.8631657137756433`*^9, 
   3.86316572372083*^9}, 3.863165765742845*^9, {3.863165824798215*^9, 
   3.86316583034774*^9}, {3.8631658981081953`*^9, 3.863166076082046*^9}, {
   3.8631709294508677`*^9, 3.863170934313208*^9}, {3.8631709906091547`*^9, 
   3.863170992512453*^9}, {3.863172846363789*^9, 3.863172849137417*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"f3985b48-0eb5-4b38-a77e-d7fc20989e2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BAULambda80", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vwlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Tnlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"vplist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"TpoverTnlist", "[", 
           RowBox[{"[", "i", "]"}], "]"}], 
          RowBox[{"Tnlist", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"alphalist", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"BAUscale", "[", "i", "]"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Tnlist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<SCANS/BAU/BAU_4.csv\>\"", ",", "BAULambda80"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8395922620121403`*^9, 3.839592267633675*^9}, {
   3.83959287469411*^9, 3.839592882044211*^9}, {3.8395929317889147`*^9, 
   3.839592940331255*^9}, 3.839601872901969*^9, {3.862020910301425*^9, 
   3.862020932056601*^9}, {3.862021031333946*^9, 3.862021040366012*^9}, {
   3.862933058593177*^9, 3.86293306752824*^9}, {3.863163375455862*^9, 
   3.863163375752613*^9}, {3.8631711957682343`*^9, 3.8631711959494534`*^9}, {
   3.8631730252811813`*^9, 3.8631730254051027`*^9}, {3.863173214174327*^9, 
   3.863173214275649*^9}, {3.8631842752275476`*^9, 3.863184275318294*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"941c14d1-94c6-4586-a505-91a10cda0e72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.863184283551928*^9},
 CellLabel->
  "(kernel 6)",ExpressionUUID->"f0797ee3-4fd8-4c44-8e4e-f40c4ae8eb78"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.8631842844685698`*^9},
 CellLabel->
  "(kernel 8)",ExpressionUUID->"36a09aa0-54a4-4c52-afa2-a58ef00d7fa8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.863184286794565*^9},
 CellLabel->
  "(kernel 8)",ExpressionUUID->"b1dcaf0f-cd43-48c1-bdbf-53b136a21102"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtm3c81t/7x0VWkVUUskoUIaMhvU+TqIRQURpkNI1IQlbI3tnjtudtb9fh
Rsm+7b1Hm6iM5PO7v4/H76/34/k45zrnXNf1uq73ef/xFr3/TOcBPR0dHRcD
Hd3/nq+crgtzGs9j9ksaZNXvI9ViJenrxnfm8ZX2WwnxLyprmr6t9JYZzuMC
auYpObPmmp23Iv3u6M5jfRBmXlYfqslTHlzLuzCPYzh2cX8Q/FIzsWLQc0Vy
HmsHWB/iWlmrUbU2euv7fQ4rmgrbTTptAy6zB8tM9nP46vytmdVoAcjZcMk5
/nIW75rQ+7LpLQt09a27r/jO4B8Gj1mX/E6Ai6z/rgyvGbyQGaDhVnYCtsRe
4WbwmME846G7P0+eAHrb9u0VjjPYqwy91zqqDIwSnZv7n85g9rNfdMXHlGGb
b/fMhtYMXny/nNosowI814byc3hnMOv+b7LS6wQcmJ6/yEaaxo0XGN4qWJ0F
fU+VI7vjp7G01quuX35nwetg8J790dOYJPOdPyjjLHx6pvzlZMg01hIuWjQd
PwvZG36+j9ym8Z9u+/Rdl8+BHK98e/P9aayfa/Ofnfh5OKnueO3tvmnsXXyq
yvPPBdAicxoxpU7hHYS0W9uAOpznkafqJU3hO3TSU8Er6nDsxbXzqXFTmGna
6aUKrwYIoYhD5yOm8MvjUH79mgZ8axdYcfWawv1PVUxk2jTg7Y8DQf8spvDH
O2/rY+ovAeXwKcovmSn8x1D05aGBK6CQY3FgunwSD6Z7PpcV1YY+VeE308WT
WFIq5nq2kjY4TPZMT+dPYlUP1t8cGtpA4T2dNJMxiYfedHYmW2uDliuv4Fzk
JLYy4zpoUa8Nj/XruT7bT+JjOdnnGcx0II1u778fxyfxfY3Inr8t10Ajpstw
QXES13ybDHs3dQ2+K3lXLshN4hkOVxGxtWug+Gj5xaLkJFZ0js7jPaAL9b0f
l37unsRpborHGVx0YSLL7tOv1QmsZDEYxHtcD/j1OrvXyyfwelrFbbdmfRA/
HD7KXjKBL2xtuSEzrQ9yjAbzIgUT+ARn2RfqX31QLZleV82cwC4JrQM7D18H
q10roqFRE3jTJ5txb9B1aOrdaynlMIHfcklOdNy6AS/0H7HdOjmBl1VPurXy
G4CbjBzvs2MTuCxX8fGzowbgx/Rb2E1hAvteKC3m0jEAUqmzQobUBBa+zvbj
8VsDaOcNMfglMIGJQ4LDB9cMQCPPSnvP2jju7fQ1E5wyhHQym4/Dq3GsAGK9
PkO34eykbJHE83GstnGsL3LlNoxxXxvpeTyOt33M2E/eaQS8dlEyskbj+AO5
Y3P7VSPwUDnQPX16HFftCd842GgEdz8iwStM47g2lquOq/oO8E9b5wkHj+HM
5C1BQ5/uQunOiP7Wt2N4TjuVW2PtLmirVtA5uI3hsQhhjmrWe+Cd+Z9Oj80Y
fp1FkSg5dA9WnvmteOuP4RWjH6WGT+5Bz0bq6SWBMYzljqm+XL0H/ryDXQ1p
o/juzbMv3SWMwbtkf3d3/CiWFWdkaTxpDB66lt1TEaM48dOP3cxaxuAYwtxD
5zWKX/8wvpJkbwwPdxztVTEbxTZCbH01zcZwkSm0v1hiFCto83LyvjCBrX8u
j6RkjGDOfy3bz/54AHThkSNFiSOYbHE18QGjKWwozIxQIkdwSOSZtTBBU1i2
ejU64T2Cb51plZe9ZApT3zPHBC1G8KmRxVt/M02hdpZpMuzgCA4VldRGNmbw
qrd21iNrGHNqkEIYxCxg43fqX/7kYSyidxFNKFuAM68vV0HMMA4+uF2455oF
uF3XOzXqN4zTht7U7fa0AO/Bz2FKz4ZxEVdaePk3Cwgb5T4/pzCMW23Uwh9+
eAg5syYktZoh7HXVPsIr4jHIMGmUj5YMYXH7Q+b8RY+BfEC23SZvCF+4OhP5
vuMxFJqtrSUkDGEO7tY0T9YnUP7ZX3vVdQi7HVy5Y/r6CTR8L6XLVB3CW+J2
pWQ7PIWR3yx3tnUOYunWcaGui5YgHczW0tg0iL+wyDKt37AER2nOY651g5iT
+epeWQtLEDTm41gtHMRuK2Si860l3OoUx7Phg9jFvprZoNUSRrPOCtcZDuJV
u6Oun29awdgdx/EX8wM48ez7pytvrUHm7+tLChMDeGbEKSIl1hqcI9zLfgwM
4J3O23fcJluDUJtP4IPmAXyzOfQIfa813FGOQtdyB7A+0SgdJ2oDEztLE2Rs
BrCqAhfzrgYbmPy4cGd2sx+/juafcxS3hZAugWT6lX6c7rsQQX/KFs4Oq80J
L/TjLw+9Q0N0bYH0LeGxwXg/HssVPfzd3Rbuc2i97MD9uPRWMfvVGVuY0c0P
qXDpxyV8j6b6Cuzg07hloz99PzYP2UcEW9pD5KdYluz1PpzB1HyJ188eLv5s
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
pXr7ptznqZr///8BzV2TyHWI2az+P67Y7iQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$425976#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
v+wYzNT0P+nawc4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$425976#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$425976#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$425976#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, FrameLabel -> {{
        FormBox["\"\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"z\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{
         SubscriptBox["Notebook$$12$172973`v", "Notebook$$12$172973`w"], 
         "\[LongEqual]", "0.21329476971372907`"}], TraditionalForm], 
     PlotRange -> {{-0.730842678540919, 
      0.730842678540919}, {-2.6506678729751838`*^-6, 
      2.2736924876711973`*^-6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(t\\), \\(L\\)]\\)\"", 
       "\" \\!\\(\\*SubscriptBox[\\(b\\), \\(L\\)]\\)\"", 
       "\" \\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(h\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(t\\), \\(R\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.863184289563896*^9},
 CellLabel->
  "(kernel 7)",ExpressionUUID->"e78f902f-c7ef-43ae-a14f-880ffe65655d"],

Cell[BoxData["\<\"Did not work!!, \\n \[CapitalLambda]_CP=\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.863184289588696*^9},
 CellLabel->
  "(kernel 7)",ExpressionUUID->"8c472c86-6088-42cc-83b6-94e2a5771da5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
v5W0kw+w6/nOpZuHRRkWi6QZo8CZ+s6qzeU8bGan3zhGEQVFMb1rpbR5WEfH
1VHoOxnW+DU2dk9+xC72gop5k2Tgr+v7qVTyEWPqPXd1e8nwSFvz92vSRxxp
Xx+//9NOfS33b46afsRPT6hzJFSQgf3w4F/rwx8xX7RA62IKGQzStLdLlnPx
wiXBH+rvyRADQxS763Kxu7eh4qEIMhw2/bz7tW0uPj6Z9HrLkwxqf3SoRhVy
8Z6MR15jzmQIDh7ee+5MLn6XVx3vY0MG6uIRmpKOHJz718k8RI8MUkr6dJQp
OZh5lz9jphoZ3MdH6RVdc/CfmoDxLRkyEHb3GMI1cvBAksZnXTEybFKPM47w
5eBTtFX/UnjJIPTWgOksVQ6WU06UrzhJhlnDas7R4mxc1z1Qar9/R79/DZe1
aTam/yN0K+tPJAzm1fJQHs7GIRyRdDfmI0FtuO5CeG0WbszpnGfsjoSWPQ2X
ztpmYS4KPPetLBKk+RoFi09nYQ5b4X3V8ZFA3PkkrNCRiS9ZHJK55xsJwi+a
xIZfZOJqaZ6ERPNIyElqlnjMl4lVTDRPPpaPhPifrTdC/TKwdZP3mdpdkdA4
1nrSHzLw6fvXOB+NR8BKQ+tPzx/pOGf+QKtiZQSIkVvT7e+m41vmf/jOeEZA
l0jrIW3uNDzzkof9OVME/DrVunxrNBX3/Gu6yrLxGlhpWhsUQlPxo4RgNL7z
PbcYbHl2dTMFex0hnVFPfA2Uzi1TbE3J+OXuBCXey6+By7Cl4uiLZMwoG/f2
BvNrUFZoiWQSSMb0P7tZbDbCIfp4i+Lu6CSsID5a5VMQDpWULZxbN5Pw9ruS
Te6wcJhdbN5e25WEGRk6PfSswkGgrDlv1vwD5swsi585Ew5aCc2BYyc/4HcZ
oYo/f4fBC/9m04HORKypkWnM2B4GTTrNLE2iidhGtoCx+UkYfLvRvF69nICl
9JNyuCXD4DBvc3tZXAKWICanqfeHwYOtJs9MmgTMo7AsRfc2FPymm/SSKuJx
E+tjWhOjUMhpaRJ+bxOPmehm/23zhsJWTNMSaTAOn2o7eMi8KgTCJZpu26XG
4j2OdVfvrJJ25pkmvkd6sTjR3ahtpZIE4/ub9pkwxeJ/i6nNhUEk0CoPc8z+
8Q4/cnFNlucmwcu/obIOoTF48rKDjVtZEPS0hv4x3XyDb52d+cmhFgSn3oVm
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

          "]]}, Annotation[#, "Charting`Private`Tag$526191#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$526191#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
uwiEdj9R3JXXU/X//18E4XuF2f2mflX+DxT2EZA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$526191#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$526191#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, FrameLabel -> {{
        FormBox["\"\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"z\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{
         SubscriptBox["Notebook$$12$172973`v", "Notebook$$12$172973`w"], 
         "\[LongEqual]", "0.15988876138892982`"}], TraditionalForm], 
     PlotRange -> {{-0.9351917756794735, 
      0.9351917756794735}, {-9.014445059949301*^-7, 1.073509447837031*^-6}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(t\\), \\(L\\)]\\)\"", 
       "\" \\!\\(\\*SubscriptBox[\\(b\\), \\(L\\)]\\)\"", 
       "\" \\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(h\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(t\\), \\(R\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.86318428969461*^9},
 CellLabel->
  "(kernel 6)",ExpressionUUID->"40848754-3199-41ca-a9f0-e455c1d7d743"],

Cell[BoxData["\<\"Did not work!!, \\n \[CapitalLambda]_CP=\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.863184289718099*^9},
 CellLabel->
  "(kernel 6)",ExpressionUUID->"9085556d-33d4-4a0e-afaf-b4931b945819"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
TcS+KsM+ByXvFQ/4dyD0KfHRFzOOOXig8U+CPh2h3FSmLEXOOVgrfz042gsh
h6JS+zGuORgo9HGeywih2CftInd45uA5Ku5YSRqEjOSNmtf55uDskc1exQJE
XpGDcrICczB7rfDW1RqIFBh6Oz4IzkGn8aOM1hiItHTa+04JzUHFTnVSfSeI
vBdvROYIz0HS6lDT0ZsQffdofRAuMgfb8wbKLAQgelvQ59AgNgejvnEyrhFB
NHBhkUNfcg6ahlnbOQ9XoddW/gU6l+cg/7uCpr+FVegSn5xzvdwc3Hh5yOUb
UoWqDlzz6xXnYJmF2huaJ1Uo4Iw/ua7KHPS8G4KLUq5CIq7LdbZqc1DjGk78
wtkqpEP77Aeb+hykk70QlLZTiSj0l/ddrs7BQYGnc2Ltlci1TmM8CczBb6z5
oCy1Ev0csvrwU34O2lAcRCt7VqJVBj7VCQmCvwequ833K5HAymPhS4T9HywH
6dyRqkQB4ySe1QT/a0f60oeoKpGI9ZxTBeE8A9vOk5jP/0QSp5YwOeI5qFdl
ZbKMfqI86Q2Ge4T6mU34Q3/44icKE32fjW+fhdkfVGzfaf9EIjv9I/kVs9DZ
M7DxNP9PVCSbteiXOgtPmrO7sw9VoD/ilvZ/3WehAJ/yrBKoQLavUraNuGah
TZZfiefpclS1Wsl913EGDvRf7m6dKkMpc+lqt4xmoBrR7ApzWRma+Wck/Or6
DMwTCjtpHlqGznAZGOxIz8Dzd5W5fliUoeRb1FeYuGdgoMf6lT8KZcjsXrXS
jdMzEJ8RZ3CVvgwlyuVHZW1Ow8d9ms9DF0rRlZTPg44907Dr35+goapSRHpL
OKojbxoqXUxL5Y0oRR2rPOYHQdMwU+9ujYNNKXomId95kTBvfNLz8WQspcj+
vy8D1lTTcKvHjP7OWglyX7/zZW50Cpr+pb4UV1eCMvpOql/JmoKyujaPJB1L
UHGPyg9N1SmY8ob1zdtrJUhBVzbU4fQUpEtrjGpmL0GXWE6lqvVOwuVD7jbT
lmKUpczU0G82CRO+j8gEcRcjbbf96InZcUi6r00121eIpq39WhrvjcDnPIf8
YlmFqD17Z/v2zjAcv5mh4uZViMBfOg+L0GGo+drQuMGwEBEBfMo5zmFYmkT2
ik60kHAfCqS5lT4EedsLPxmRFqLC8T9a7wSG4Mffj7JThwuQlqvdmmLCILTR
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$466094#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
JMxDN84QHvokTfT//9+DV27PzMqXWJX+Dy8KPQg=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$466094#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtmXc0F977wCmJjCSpEClbKCuRLiKrlNUiSfbqQ1FUVtIQRdKwt+y9Pdfe
e5Pxtvd+v5Gk7/t3zu+ve17nec55nvvMc8/lNnmkY7aHgoKigpKC4v/OHq68
93kJS1hxvEVTNZW2lNppSmYqegm31rjzsidPl0o3sE4fCV/CnftUVFrqNkuD
nzy97BS0hO3Hz16LoKSBm/UyOxKeS/iuB/f4sMUx6HYstsu8u4TD1tPvXKMW
hK7qshspDEs4Ljj+QOz7C9Bp08ga/XgRsyXSXz0dqQEyljQnrO0Xsb322rPh
Y5oQaqpyWtxqEbNuCyRUBWiC+T0sVmG0iCuzjg28enMVtrSy1cbUF/HFTv+K
VQ8t4BAPcT11chHLMzhNjF/TBtMt6+HopgXc937c6a+LPhC9D8TH8C5gj+9b
qh9sjUCtN12y6uQCjmJ0vv0m0whCBfUrJ9gXsNp+GWuuTSO43BJB4GVewNIu
NrV7vO9D4FEp9sTdeZxBP7LSrG0MZ5Puf0rpnceDDGXp3C4PwK41xzX33Tx+
u3xS4Xv9Q5g6fv967eIclnAvyamvtYRgca2bFLNz+I/v2OX5ZUtQ0ZS/d2Fi
DmsdkR21PmYFsS/YbZIH5jBdwJHqR9ZWYDLS6/Oxdg7L9MQlUDBbw3DsDbgV
NYerCJbvKqxtoEdMSWRGbw5T3pM7MsNlD9UqvHS0JbP4e8fHKdNtB0jax209
kDeLpyoCQ7cPO4J/NUd9cuYs7jtZYtUv4gg3VVjeaCXM4jpVI0sTE0eYUt67
NyhwFp87N9ki3uII1Mqj25xWs7h2gYdSL/UxXFEKm5NkncXS829TDB45Qe2l
Iw3G/81gals4nyTvAj/0XDLf28zgyJ0n4RoGLmBvPfQtx3wGz36WZRVycQGW
4DgLmnsz+IsK65fgXBcwWZTal6E+g1tK9+sXnHWFnZCbCv9OzeDHqp/3ZZ95
Dud+f80L657GWtR+My48LyEkmy1mQHYac+Eqj+ocD4j+z3csVGoalxRfRJO1
HpAkssN9/+w0vlVSyyn5ywOKEoYix3mn8a/fCxK6ezxhICQyfIFpGnMWXL+r
pOMJx7z5fuxOTeHK9ht5ihueEKwnHnDq8xTO8d98yIJeQSBJ3d16fhJXuP8U
EmPwgY1nVOdVpibx48ZJyk88PnBnB5a4Riext8yBZ8cv+sDJvZJG3T2T+IjX
XcdvNj6QxsQpr1AxiT1OKW1NNvpAo/Da9pHvk7ib5Rlzkf8boDL54Vx+ZRKH
zSq++c36Dpxb5uyORU/gyW+izm/++wD1CQxpmmETeJP7C5eK7wfg8Dy75PZt
AotoOhJPxX+Acgln+0n/CXxl1PPDucEPQP+d8lHW8wnc2vHRSk7dD2IeHvvv
qv4EFvOUfELL4w9tWyqOHjQT2PdsxFzc8EcQPh3lPGM/jomcMXPWbQGQFdPG
mGM1jimE+o2rRwNAlociwd10HHcwLe5cWA8ANd77vax3x3HIDW8eC9ZAMOc/
IaOiMo4PZ6hHv7kXCNHC339HsY9jnqSt4aCFQDgmGfDCoG4MW4UfunfpYBBQ
qXh6tXCP4TvCjEXwPhhc2Y/HrHGMYZMgu42U8GBYXc2oZD02hjeyCwdTsoJh
OJxAdZ9xDF9Q1L3YOxAMhVvozfL2KB4tETT0E/4K9im7vkxdo/imu37l+aav
0H/4xRcdn1HMEt5xMO3od0gbc07smSPgeRvVAJ3JEPBwv614eIqAW1/ejJrf
CQFdDtmB66MELHizxC6EJRS29P/S1fcSsPy0lbiEcigo1r96VFxFwG/NDISX
Y0KhK/2TdGQ4ARcnMA5umITB7xdJVVY6BBzBJqHLOhcO70RLyn8/HsEnBrUv
JpyIguC8bzExViN4XKJMiUUkCmIvOb2+dn8E7/PYGP5yMQrKtETVozRG8G6B
/41mgyjYso9sU+MewVPUMvcbfkSBebr3yNeWYUz4VWY8fSwaLp+99ldKcBiH
qRzw8WGPgb/nhmUchwfxU4M7V27oxMGcma9wc9cgzjNkeCtiGgc932U4BRoH
8T21aobjznGQRvl573D+ILZYMzpx6EccGLertqgHDGIJNvoehbE4qPgv8yG3
8iDm/ze67uoQD2/Tvf3bfv7C875UU/qhCcAiIjwh6jSAtT26vPn4ksA6fdWn
yHoAi9zMvvlXPgnwuQLBK8YDmHQ6u3BRnyyXVnl0T3MAM8IgBZ1PEpSh+9u+
3AP41Ad1yZqpJLDV+cw029yPzf1YJXLik6Hy6Z+LMXz9uPXb8FNNuVQ4tl0+
IsrRj+/HtzkK3kwF+xdvvYoO9eOhX3VV7A5kueeRuvadPvzbkSldKIEsfy+m
S9HZh9+jITP7w2nAFvbQ6p57H84U+dkZNJMGjhWNX4729eKRJY39hw0ywL2d
V7CruRffUrwQ8ccqAz4Q3Es+VfbiWFkpn7lnGRC/KzFOm96L8+gbhtqCM6Bf
NvTszute7B8SuO3ckQEK2baNBIle7NT+8PKwaiYwxjJQJn3swfIztNr7NLOA
PdsiyPx1Dz6pfyxm2SALBCrK+U8/78EOqtSsQ7ZZoERw0go178H3KCxocv2z
wIljOMRfvgeLRbyp2tORBYNBadKP57vx3BoXw/1b2fDz9XXbi6rdWPvTywg7
zxwIUnBlSpLvxuW8e+gcP+eAx5/YnKOS3TghUfihU1wO3HTY3lk72Y0PvmJp
sq3PAap7cX4/t7uw2UjLqQamXDCW/JPGmtaFFfUOvJ0JzwXW8fjVFZYu/JDP
+bz0cB7sCW//YkTXhcev8DoS1/Jg8fbOhSbKLjy62auesz8fqlq0vRKWOvG7
w3ePCZ3LB4eiHWajuk7MYXNd6M2rfGgK0JFsfN6JLwumHDHmK4BXCrvOcWMd
eK1RLOlncCH0qSs1Xu7rwFV1G65tGYVwRteHa6y5A2ubHXb821AIPWaMdZyF
Hfi/5/dCdf4VgoAv5/FvHzvwQYY4Y1WLImjqvlT8/mIH5sQJOWekioHFxv3f
o+B23Jpw9DI/QylYPqnUZfzQjmmDEzoWhEuh9OX+xBTPdpybqaCZqlEK5p8+
3pi1bcffTujv3fO2FApyI6JMLrfjRy+cRsUoAQwpyi7rr7RhehtD06ENgNgv
FG9lNdrwrSxxq7DgMujVOLL4TqENy2c3dUcllMEBCiGdfuk23J4gUh9aUAb/
WetyPDvdhk0abHwsBsrAxe3qA5vfrbju3YLgLEc5JLV/zXpg1Iq1UjbYU+PL
ge6ZqL6WQAuGTPce4/EKcBy7xbXI0oKjrESayjcroO+q56wvZQu+IZlaeoy+
EmK5u17WDzTjTmNLgWDJSrjY6BKv7NeMITVLSMu7Emw5qzdl15owV3XCifMC
VdBSZfCDv6QRm/lF+67HVAN1U34Vf0Ij5ucvtH8L1XCp8/Ayf2Ajtvw40MvU
Xw3po42XBSwb8bPSN1IjDDXwaVduUYClEduKBizHO9WArgyHgpBtA65KcvB/
cK0W+pIHJ89w1GPp1ILA04r1wJQtwySyvx5L3PGM2PugHtSKgmRF1uqwpZxn
R7lHPRTWXf0oUleHwx0iL+XievgxWSIj+qQOW3uVci3JNsA9rjBfsaZafHJW
+COTeiOMBd47J/6iBjcl/R7WTWyGd9mEi0EWNTjR9Jp2eHMznO16qLahU4NF
FZ6ppKw1g9sR6/tFgjV4uXn++ZxcC7B/c/ZT6q3GBhE1ibqtLaAX9nFWR7wa
52oZZYnRt0FNQnnU45lKXCFdKuX0uB3s6pRTuzsrsS4B6/541w4ss7UF53El
7lTXMwuMaAcToZbWP18qMRZbYiE1tMO/lIG/ry5XYhu+FGsWvg6QyVq/ExRe
gcuF3jp/Xu6AnyW8zLl65di4mH9WLLwLGKU0kItiOc4MzeCOyOsCx1R7W3nR
cpzneru5p6ULZMPza6r3l+NVk2ijgX9d0OCu/rynqAzbpo6011l0w4KS3cTm
yTIs2D1mEqneA0aBVnZOA6V4wYvtsTp/H/C9yqr9m12KtxkD3rso98Hy4z/c
Pn6l+HPWcQn7B33goe/XE6xQik2E2Gp4Q/og6lgmKogvwWmBMy99WfphInzr
0B/HYrxucnPJjn0ArJPf5HnQFeKINjFhE7VB6O2Wam8cLcCkUa4FD7tBUKaY
mGctKMCU1atudwIH4YS+AneqaQHmvXvjgO2vQWjb3fLtL83Hq/vjfTceD8F5
HesH4v/l4eypUreakmGg+n2VfqIrGzsc+cA0kkcAOT+eKv+LqVhVpHSPY8Q4
0ChSe6QupWBe33LLt7nj0EOclmuKTMEs9mG3+xvHwdEwOZt2XwrezFCk5/o9
DknC4jHezUnYM3mfwrT+BLA1IC9Xo0Ss41KLe45Mwm9qAwVzjxjsX3JhJfjH
FNhTnnZ5/vYzbk/9GfCpbBaoZNtUTWMD0fOosoRHv5fB+CSqptf4jI4dGZej
O7ACJdRpSrnLnxHhyYb4/aMr8KTTV55a7gviT0ujLzi3AhO2qhKJ7V/RwZwF
X3GzFaiKAM6F3VDkmqCiE1G3AhVePduFKTHI6j1n4x/fVVgh+V3w/xeDUs5+
/an+bRU4rVSemejEouRi3hiL2FVwvZ5DOrAViyhSxDZPlKyCOEfgisHleLQj
FPepaHYVonOvTf3tT0RT6m83ptAavJqpalfcn4YaX/6VpZldg5KdjXd+emno
3x5m1Yy1NdhgElTqj0pDj43NuHh31sD6gl/WfxfTkcq7p2c8GNdBoDqpvlUm
A/X2HHJTO7cOB1kfJ+3aZaLiV8Yibx3W4czJDz6xQZlI0XJ07xWXdVATijPR
KM5EJYWGr3c81sHrUi9bME0Wqn276mH0aR02zOV8RWKy0AN2w5OX09dhKH+v
rWFfNjL0VOd/vbwO2+Ucanv+ZaObhd6O1zfXgbVJiieRNwdpuJXJ/tpdhxsE
i8F1xxy0/3iwljIDEapomq76MuQim6cKA/n8RBhlnhQ4J5mLMnaoTWdFiLDL
sUvVezcXNY35vNqQIML5c2dLTyXmIge5g58yEBGS7gSJFCnlob1U9VL/9IlQ
+zCV1tgqD710Gq20NCDChF3N5L5PeSiZ3ZaizpgInF5bYdpDeYjuP8mAJzZE
CEgyZJx9mo+ecB6zHPUgQlqO05x/eD6iZ1cv0/UhQgP410hW5yPJk3Ej3b5E
oOosc/NgLkB8abIerF+J8OwPz/LR1AKE53nTktOIsNLYd+BPTwG6rXLoSlUO
EaxCP/ANUxSi21FLR32LiHBXnngvVq8QKTzSfCNVTYQOhkSXN26FyGsmQ+JU
AxE0hg2+WCcWoiHHrvOtLUSQc69sOrtTiILruc1e9BIh5/rTmcN8Rehq2Lmw
17+I5PwJU21eL0Jtnxo1HowQgaM8UK40pggRJ614oqfI8dtjkqSuWYw+pE9E
1a0TwbnzSM0Zp2IUNNN/c2KDCMsx9aMHI4pRi9FqycZvIhCUzx3vWStGnw/p
Fh2iIEGFD8Vbkx8lSH7TSSOCngSyt3JiVKpKUJ3HoTvLB0mQzW+JBZZK0JKp
hd7dwySIrWvdWFIsRcWajGKf2UjA8f0Vc4dNKSrRVzlhzUmCIKvzorlfSlHF
YHSL2CkS0MvOq3/DpUjwVy9VOC8JXh+IMHs+W4rE+xQlCgVIsDug42l0GFBt
TQrxtTAJnJOpwxTlAfV9nxinESXB0vOiAh4LQNrKuSFXzpLA/Kp91/4AQJyF
c3mXxUkwzHFqZa4IkMj8jTYqSRLcWuyma5kAZNuc7eUvRYK20nf8mYwY1eiM
WE5Kk0DNX/5ykAxGQvYRJxhlSFBmtGr01AQjb+YyOYYLJLggFud69wNGZeIM
RtNkzvp3O1g+D6Pmch2uKFkSCLXRZ50kYPQly5ANyZFA5wZhinJfGTqwtTFb
TWZ/maIn68fLEMvrRQHZiyRoOBm0Z1K0DMVcpXeMJDM1rf2nnstkVuQy/ktm
pVVVzrrbZYjy1pqfvjwJ3Pq5UwrtylCSu3ZwKpmLyv9cSPYqQ75pNCwHLpFg
82d3bejXMhTYMx71iMySgen6/ilk/bm0gTEy/+f6bty9vAxVDEndsUQkSDF5
6ODQU4ZqopULqBRIMKMh/89knmz/TEJgCZl5JI766VGUoyv2gq+CFElgzL7K
duVIOQq7+5UnQIkEoXsbE88LlaOgiZJD+ZdJ0DcfKy2IytF4Heu+RmUSsHS5
VbHplaOQ646qviokuFFyW4feqhzlfv0hvUPmD7HihL8vy9G1AWnZU1dIUP+B
3n45sBx53FgqpCRzsAFmc08oR2ozCs+jyPqmQo61jCXl6LV6bPo+Mp/7zfMk
vK0cDepxeImT7e3W9p4UnSxHq3MpJ86Q/WkKft9c+rscWSzcSd0g+//dTN71
GmMFGrvAbxhMvp+55Arf0KkKRJNzTP8gOR6Se2M6bc9XoJdy4pVm5Pju6dD3
2NGsQOMZT9vDyPlrjaQR+WBcgQjEhaRicv6tL9n7JL+rQCI2zjaF5HqKdLlw
Ye5XBaKNceg9J0ICe7WFSZeVCsTKFb1OT65fuaMRgbT7KtEve26JZXJ99+RQ
LQiIViJ2eo66fh4S0K20hlt4VCLbVrvd4hPkeIKX5mZQJRJ87jmrzEGCeD+p
LZ+flciGIVBtktxfjw1nYlmhEj0XKR5UPU4CBeEQ7fiOSuRCk+b98CgJGLev
7UpNVyL59UP7Lh4hwa86iuTqP5UoXsn/VDczCRK/Zt/SZ6pCfpoNUeJM5P4y
N6ea5KlCbSZ2qrcZSKAsdTzzyYUqpDnE2ad+gASHqJruUWlVoYGDPsfo9pPr
J+pc/umnVShyhbmYjjwvRgd3rEzqq9DIzGPaRytEuKr7uXXErhqFEEuGaMnz
jO3UlRePvKqRcf6Fb0X1RJhe2RL4F1yNttxHrz4lz0MvfyMvzrJqRO98Pf90
KREK6gWl7jHXICbDVeasVCL4fBscXeCrQfzvdvdu/SSCrsVH/xdyNcig9PS3
f3FEWKIiTYeY1qCJPXv9jMOIUNyZECTsUoNOPXt4v+wbEd5G31Us9qtB6iUC
BUufiXBaoezHQF4N4nYRJVS+I4JkfjsvTUMNyrnG9q/ZmwjKouMZUkM1qEns
9vECdyKYclDXftpbi5ZatnKknYgQv6W5fuVGLaq6w1LKd58IApm9mtmztYg7
cT6L/RwRZARmewg7tWjlooPSfWEiqEdsP2BkqkODiXujU3iJYO134pmVdB16
UvDyyiM2IiRbPYzlelWHrL8y3BmiIoLoqeUdX456dGF4MPN9zzpc+k7xtlCs
HhmanC/nbVsHLSbmw9NK9ejP8rcncfXr8GhXUlDJqh7VqF2VMihZh4wBV/2t
3Hqk2ufA9StyHSQ+U6eZXm9A3ikJ4VSW6yBDxXlf3qsRhabWa69troHz8M47
2q+NqCkga7NleQ1yCn7ldCc3ovwLR6UDp9fgrN33A/bdjUgvSiugq2cNBHtY
8sIFmlCxhbaeZ84asCXSMVC0NqGSgFcxyH4NdjR/F1Wwt6AzDr+2o8ZWgaBu
TRd7tw39efwzejhnBSh/sElM1nYgRUNPUdXWBVAvmZaaE+hGvnd5mIzNZkBD
+YF4ZWkv+m1zK5N9/wQkdqVv3+IbQIETjofYXAngUZYfVn92ALVczCs6YUuA
OylYQU5uAF3Orb0kaUSAA96tPpw3BhCdpkB6gBIBbCSWmSddBpDZdPzRbjoC
iAaKCjs2D6CAkKjn1vIj5P2aavDhyS9kQ8Ptv/ZxCHBDUklZxSA680NKYPb5
ABQcGNPybBpE0VpaLUHmA5ClcXxUsWcQGZzdWtLRHoD4hjf7KmcH0WiC3vRv
vgHwbzDVqmYaQnfCvBO+d/SDYQMnod5oCHnpmFDcFuiH7frAvZ3bQyjSbVdQ
i9ALkvWuGpPiI6glw+Xm4qtucH7BufDk4gjiS7YSbXfshkKxCj+qKyMoZsec
VP2gGy4F07afvjOCTAieYb2oG9Qefrtl4j6C7mrscbix0wUGf3NNRxpHEHWM
6x+FJ11Q/u0ZthUnID4KttvPbDthpim737yRgNwm3kp8Jr+P9P490wluI6Cf
zRTuTq7tUH7uUmN1NwFlJHdS2tm0w4/guhIeAgGtU9w58OlaO1wzHooYIxLQ
eaF3GXrM7ZC1Tm1uxDmKAlULwq+GtMFLtrtr+g6jqOy6yuoh61ZgtqSgUzk6
hk6+8RKQ52+CT8r3/rBzjKE9+3jPLzM1AQN30fzayTHU9KjaL3O7EWgGHjdF
Co0hR7q6Z7daGuGv5rTfjvwYOn/rKmOxUyPMiLUw5ZiOofyXRW5PyxsANkNY
T2eNIY4ZwvdIu3qweXP+FOW1cVRMuBrd/6cGckreFCGdcWRukFtlNlMDO6u9
Om63xpGcPxs3VXcN+Bs+e/XnwTiaM5MIskirgaxzhRMk53HURaApuvOgBrZ+
ySbMRY4jgaic4y5V1eBz9tKZLuI4shF41MgZUQWR/crSCaET6Jaa8ISwdwX4
qWnebI6aQN8rkobmn1SAa76283r8BBqleyOSalYBel+M8lDmBDIRd9jkV60A
Wu1n0n3VE4hrpF4lmbYCHOuSpWmXJ9D1tI7kJ37loJzPfN5GcRI5hNHyZSWV
wWwQ4bzY1CTynnN++m4PwFSqW+vO3CQ6E+KaqjFfChM1HBYNy5OI9NVgk7Kr
FAhbt4PNfk+iedpGRuW4UugzbCeG0E+hsYEN5fQrpVDDU5FJIzGFjl7ky5n2
LYHYnBjhMfcp5Ku4eZJTohiMu8y5vhyfRvqRT9/9iyqAnCuVeyfNZ9Ad1prI
hJJsOC9/oIU5fBaVOvzSiPdMh+bQkdenWueQN5uT2iW9REBivrIcbAsoazNM
6Xh5JBBUuLvXtRZRpts/579lgaD2fXPkpt4iukHSvfT8RSBkLDTPFd5ZRNUr
M5vMMoHg8dmVwsN0EaladhyOSw8ArtFOYXrXRRQoVGvcHP4JjF74ePHELSJ2
h5oet5YP8CtrXkz/zyIamaARc458BUrUFbIFFEuoSELp+VfGV+T3wzcVduol
NHQv9vOFl17gSqFiMMq0hP52b3Qn3vUENq1wHzu+JcS+09gqTu0Gt2dvDL3W
XkI3BkSkw88+gbKL/DMzN5fQepaZn8uSIwh8+rumabiELD/8ZdVOdoAt6SQa
ZoslZNDo+9FRxR6+eu+VDH+xhAbv0v0IYTeF3d7+S5ReSyiMiaW+K+ABmAtn
qJu+WUJuaW6LZ5mNQLrD8L5Q4BKqLxvK/bSlC+G8EtZ+X5fQLfb0+xPj14Da
hdZpJXQJLRxf8yQRLoN904i7bvQS0n4/T959EvD//4Ho2zOnrC9KuqX/A3n/
YZw=
          "]]}, Annotation[#, "Charting`Private`Tag$466094#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6fbkifT/AfSWjaQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$466094#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, FrameLabel -> {{
        FormBox["\"\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"z\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{
         SubscriptBox["Notebook$$12$172973`v", "Notebook$$12$172973`w"], 
         "\[LongEqual]", "0.4151182895536364`"}], TraditionalForm], 
     PlotRange -> {{-0.9579728240213843, 
      0.9579728240213843}, {-0.00008645522560428437, 0.00006595993712908662}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(t\\), \\(L\\)]\\)\"", 
       "\" \\!\\(\\*SubscriptBox[\\(b\\), \\(L\\)]\\)\"", 
       "\" \\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(h\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(t\\), \\(R\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.863184290949532*^9},
 CellLabel->
  "(kernel 8)",ExpressionUUID->"693e454c-2433-4177-9ff2-4d62b7a0b6d3"],

Cell[BoxData["\<\"Did not work!!, \\n \[CapitalLambda]_CP=\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.863184290971243*^9},
 CellLabel->
  "(kernel 8)",ExpressionUUID->"00f37349-393a-4624-8ab5-75380796500e"]
}, Open  ]],

Cell[BoxData["\<\"SCANS/BAU/BAU_4.csv\"\>"], "Output",
 CellChangeTimes->{3.862026657783413*^9, 3.862935145029351*^9, 
  3.863172090039123*^9, 3.863173101458233*^9, 3.863173835573144*^9, 
  3.8631842909886427`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"4c47aecf-0110-4732-9aa0-560018717960"]
}, Open  ]]
}, Open  ]]
}, Closed]]
},
WindowSize->{1355, 465},
WindowMargins->{{40, Automatic}, {Automatic, 41}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b5a82124-3982-4cc0-b2b6-e80583a368f0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 243, 5, 200, "Title",ExpressionUUID->"d30c64bf-2227-433f-96cd-3b0705509954"],
Cell[CellGroupData[{
Cell[848, 31, 598, 9, 86, "Chapter",ExpressionUUID->"aac0c648-e434-4e0a-8316-4555bbcc361d"],
Cell[1449, 42, 614, 12, 64, "Input",ExpressionUUID->"3e924a01-8ce7-4ee0-861a-409b9a17d454"],
Cell[2066, 56, 2338, 51, 220, "Input",ExpressionUUID->"4cfe54ff-4d8a-4ef2-a73e-a8e1496df911"],
Cell[4407, 109, 2356, 60, 168, "Input",ExpressionUUID->"c4642fd2-bac6-4158-be72-601768a72806"],
Cell[6766, 171, 563, 13, 37, "Input",ExpressionUUID->"c7e092b1-2f1c-423a-badf-41817ca270e7"],
Cell[7332, 186, 661, 13, 37, "Input",ExpressionUUID->"2c7230e8-3935-4f49-99c9-61e3fd6920f1"],
Cell[7996, 201, 2275, 64, 350, "Input",ExpressionUUID->"6fb3d7cf-266b-4655-93f3-e4632042f35b"],
Cell[10274, 267, 96497, 2475, 6790, "Input",ExpressionUUID->"77cc0fd8-fe60-4e33-8925-d944a7cd3aef"],
Cell[106774, 2744, 1176, 30, 90, "Input",ExpressionUUID->"25b5e6fd-4a54-4a82-8a65-afafeb7f0025"],
Cell[107953, 2776, 1944, 45, 97, "Input",ExpressionUUID->"edbe3538-fef7-4cea-9985-7b7c683c3b33"],
Cell[CellGroupData[{
Cell[109922, 2825, 606, 9, 37, "Input",ExpressionUUID->"002075f2-6453-4ac0-b1d1-f180c9725e23"],
Cell[110531, 2836, 2757, 48, 33, "Print",ExpressionUUID->"3e38d7d4-d88a-44a7-a99b-80931194a98b"]
}, Open  ]],
Cell[113303, 2887, 1274, 34, 90, "Input",ExpressionUUID->"17ccadb6-bafe-4bf2-8d57-8e4cb776928a"],
Cell[114580, 2923, 2747, 63, 142, "Input",ExpressionUUID->"ddee143b-63f6-4888-a21f-9cab8c3743d5"],
Cell[CellGroupData[{
Cell[117352, 2990, 1874, 26, 37, "Input",ExpressionUUID->"3dd209a6-03ac-49fc-9bfc-38b11c6c8d37"],
Cell[119229, 3018, 90605, 1579, 854, "Output",ExpressionUUID->"0033364f-e5c1-44ad-a03a-02249f9c82aa"]
}, Open  ]],
Cell[209849, 4600, 3838, 84, 506, "Input",ExpressionUUID->"f3985b48-0eb5-4b38-a77e-d7fc20989e2f"],
Cell[CellGroupData[{
Cell[213712, 4688, 1724, 39, 90, "Input",ExpressionUUID->"941c14d1-94c6-4586-a505-91a10cda0e72"],
Cell[CellGroupData[{
Cell[215461, 4731, 468, 10, 92, "Print",ExpressionUUID->"f0797ee3-4fd8-4c44-8e4e-f40c4ae8eb78"],
Cell[215932, 4743, 470, 10, 92, "Print",ExpressionUUID->"36a09aa0-54a4-4c52-afa2-a58ef00d7fa8"],
Cell[216405, 4755, 468, 10, 92, "Print",ExpressionUUID->"b1dcaf0f-cd43-48c1-bdbf-53b136a21102"],
Cell[216876, 4767, 71570, 1256, 326, "Print",ExpressionUUID->"e78f902f-c7ef-43ae-a14f-880ffe65655d"],
Cell[288449, 6025, 222, 4, 68, "Print",ExpressionUUID->"8c472c86-6088-42cc-83b6-94e2a5771da5"],
Cell[288674, 6031, 68676, 1207, 333, "Print",ExpressionUUID->"40848754-3199-41ca-a9f0-e455c1d7d743"],
Cell[357353, 7240, 222, 4, 68, "Print",ExpressionUUID->"9085556d-33d4-4a0e-afaf-b4931b945819"],
Cell[357578, 7246, 79455, 1385, 326, "Print",ExpressionUUID->"693e454c-2433-4177-9ff2-4d62b7a0b6d3"],
Cell[437036, 8633, 222, 4, 68, "Print",ExpressionUUID->"00f37349-393a-4624-8ab5-75380796500e"]
}, Open  ]],
Cell[437273, 8640, 293, 4, 42, "Output",ExpressionUUID->"4c47aecf-0110-4732-9aa0-560018717960"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}
]
*)

